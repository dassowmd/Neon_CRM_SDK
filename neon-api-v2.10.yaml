openapi: 3.0.1
info:
  title: Neon CRM API Reference
  version: '2.10'
  description: |-
    Welcome to the Neon CRM API v2. This version is a complete rebuild of the existing [API v1](https://developer.neoncrm.com/api) and adopts many modern RESTful API conventions. API v2 also introduces new methods for working with custom fields and events, in addition to updating and extending the functionality of all the existing methods from v1.

    API v2 has two possible base URLs, depending on the type of Neon CRM instance you are using:
    - **Production & Sandbox Instances:** [https://api.neoncrm.com/v2](https://api.neoncrm.com/v2)
    - **Trial Instances:** [https://trial.neoncrm.com/v2](https://trial.neoncrm.com/v2)

    ### Authorization
    API v2 authorizes all requests using [HTTP basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication). Use the values below for the username and password pair in the `Authorization` header of your request.
    - *Username* – The organization ID of your Neon CRM instance
    - *Password* – An API key associated with a user in the instance

    Learn [how to obtain an org ID and API key](https://developer.neoncrm.com/authentication/) from your Neon CRM instance.

    ### Versioning
    This API is versioned to allow for ongoing fixes and updates to the API that may include backwards-incompatible changes. Specify the API version by including the header `NEON-API-VERSION: 2.X` with every request. The current version is listed at the top of these docs.

    Learn more about [versioning in API v2](https://developer.neoncrm.com/versioning/).

    ### Legacy Events vs New Events
    Currently, only [legacy events](https://support.neonone.com/hc/en-us/articles/18441378851981-Legacy-Events-Vs-Events) are supported within Neon CRM's API. [Follow this page for updates.](https://developer.neoncrm.com/updates/)


servers:
- url: https://api.neoncrm.com/v2
  description: Production instances
- url: https://trial.neoncrm.com/v2
  description: Trial instances

tags:
  - name: Accounts
    description: ' '
  - name: Activities
    description: ' '
  - name: Addresses
    description: ' '
  - name: Campaigns
    description: ' '
  - name: Custom Fields
    description: ' '
  - name: Custom Objects
    description: ' '
  - name: Custom Object Fields
    description: ' '
  - name: Custom Object Form Layouts
    description: ' '
  - name: Custom Object List Layouts
    description: ' '
  - name: Custom Object Records
    description: ' '
  - name: Custom Object Relations
    description: ' '
  - name: Custom Object Validators
    description: ' '
  - name: Donations
    description: ' '
  - name: Event Registrations
    description: ' '
  - name: Events
    description: ' '
  - name: Households
    description: ' '
  - name: Memberships
    description: ' '
  - name: Online Store
    description: ' '
  - name: Orders
    description: ' '
  - name: Payments
    description: ' '
  - name: Pledges
    description: ' '
  - name: Properties
    description: ' '
  - name: Recurring Donations
    description: ' '
  - name: ShippingAddresses
    description: ' '
  - name: SoftCredits
    description: Soft Credit Controller
  - name: Volunteers
    description: ' '
  - name: Volunteer Groups
    description: ' '
  - name: Volunteer Opportunities
    description: ' '
  - name: Volunteer Roles
    description: ' '
  - name: Volunteer Shifts
    description: ' '
  - name: Volunteer Time Sheets
    description: ' '
  - name: Webhooks
    description: ' '
  - name: Windfall
    description: Wealth screening data from Windfall
paths:
  /accounts:
    get:
      tags:
        - Accounts
      summary: Gets a list of accounts
      operationId: listUsingGET
      parameters:
        - name: currentPage
          in: query
          schema:
            type: integer
            format: int32
        - name: email
          in: query
          schema:
            type: string
        - name: firstName
          in: query
          schema:
            type: string
        - name: lastName
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: userType
          in: query
          schema:
            type: string
            enum:
              - INDIVIDUAL
              - COMPANY
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountSearchResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Accounts
      summary: Creates an account
      operationId: addUsingPOST
      requestBody:
        description: apiAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: apiAccount
  /accounts/link:
    post:
      tags:
        - Accounts
      summary: Link an individual account to an company
      operationId: linkUsingPOST
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LinkIndividualToCompany'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: request
  /accounts/search:
    post:
      tags:
        - Accounts
      summary: Searches for accounts
      operationId: searchUsingPOST
      requestBody:
        description: searchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: searchRequest
  /accounts/search/outputFields:
    get:
      tags:
        - Accounts
      summary: Gets a list of possible output columns for the /accounts/search method
      operationId: outputFieldsUsingGET
      parameters:
        - name: searchKey
          in: query
          description: searchKey
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OutputFields'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /accounts/search/searchFields:
    get:
      tags:
        - Accounts
      summary: Gets a list of possible search criteria fields for the /accounts/search
        method
      operationId: searchFieldsUsingGET
      parameters:
        - name: searchKey
          in: query
          description: searchKey
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchFields'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /accounts/unlink:
    post:
      tags:
        - Accounts
      summary: Remove an individual account from an company
      operationId: unlinkUsingPOST
      requestBody:
        description: request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IndividualToCompany'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: request
  /accounts/windfall:
    delete:
      tags:
        - Windfall
      summary: Delete Windfall data on all accounts
      operationId: deleteWindfallAllUsingDELETE
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountWindfall'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /accounts/{id}:
    get:
      tags:
        - Accounts
      summary: Gets an account
      operationId: detailUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Account'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Accounts
      summary: Updates an account
      operationId: updateUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: account
    patch:
      tags:
        - Accounts
      summary: Patch an account
      operationId: patchUsingPATCH
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: originalAccount
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        204:
          description: No Content
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalAccount
  /accounts/{id}/contacts:
    get:
      tags:
        - Accounts
      summary: Gets company account contacts
      operationId: getContactsUsingGET
      parameters:
        - name: currentPage
          in: query
          description: currentPage
          schema:
            type: integer
            format: int32
            default: 0
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountContacts'
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountContacts'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Accounts
      summary: Creates a contact
      operationId: createContactUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: contact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: contact
  /accounts/{id}/contacts/{contactId}:
    get:
      tags:
        - Accounts
      summary: Gets a contact
      operationId: getContactUsingGET
      parameters:
        - name: contactId
          in: path
          description: contactId
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Contact'
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Contact'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Accounts
      summary: Updates a contact
      operationId: updateContactUsingPUT
      parameters:
        - name: contactId
          in: path
          description: contactId
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: contact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: contact
    delete:
      tags:
        - Accounts
      summary: Deletes an contact
      operationId: deleteUsingDELETE
      parameters:
        - name: contactId
          in: path
          description: contactId
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        204:
          description: No Content
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Accounts
      summary: Patch a contact
      operationId: patchContactUsingPATCH
      parameters:
        - name: contactId
          in: path
          description: contactId
          required: true
          schema:
            type: string
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: originalContact
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        204:
          description: No Content
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalContact
  /accounts/{id}/donations:
    get:
      tags:
        - Accounts
      summary: Get a list of donations for this account
      operationId: getDonationsUsingGET
      parameters:
        - name: currentPage
          in: query
          description: currentPage
          schema:
            type: integer
            format: int32
            default: 0
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: sortColumn
          in: query
          description: sortColumn
          allowEmptyValue: false
          schema:
            type: string
            default: date
            enum:
              - date
              - amount
        - name: sortDirection
          in: query
          description: sortDirection
          schema:
            type: string
            default: DESC
            enum:
              - DESC
              - ASC
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountDonationSearchResult'
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountDonationSearchResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /accounts/{id}/eventRegistrations:
    get:
      tags:
        - Accounts
      summary: Gets a list of event registrations for this account
      operationId: getEventRegistrationsUsingGET
      parameters:
        - name: currentPage
          in: query
          schema:
            type: integer
            format: int32
        - name: eventId
          in: query
          schema:
            type: string
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: sortColumn
          in: query
          schema:
            type: string
            enum:
              - registrationDateTime
        - name: sortDirection
          in: query
          schema:
            type: string
            enum:
              - DESC
              - ASC
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationEventRegistration'
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationEventRegistration'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /accounts/{id}/memberships:
    get:
      tags:
        - Accounts
      summary: Get an account's membership history
      operationId: listMembershipUsingGET
      parameters:
        - name: currentPage
          in: query
          description: 'Default value : 0'
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Default value : 20'
          schema:
            type: integer
            format: int32
        - name: sortColumn
          in: query
          description: sortColumn
          allowEmptyValue: false
          schema:
            type: string
            default: date
            enum:
              - date
              - amount
        - name: sortDirection
          in: query
          description: sortDirection
          schema:
            type: string
            default: DESC
            enum:
              - DESC
              - ASC
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MembershipListResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /accounts/{id}/orders:
    get:
      tags:
        - Accounts
      summary: Get an account's order history
      operationId: listOrderUsingGET
      parameters:
        - name: currentPage
          in: query
          description: 'Default value : 0'
          schema:
            type: integer
            format: int32
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Default value : 20'
          schema:
            type: integer
            format: int32
        - name: sortColumn
          in: query
          description: sortColumn
          allowEmptyValue: false
          schema:
            type: string
            default: date
            enum:
              - date
              - amount
        - name: sortDirection
          in: query
          description: sortDirection
          schema:
            type: string
            default: DESC
            enum:
              - DESC
              - ASC
        - name: transactionTypes
          in: query
          description: transactionTypes
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
              enum:
                - DONATION
                - MEMBERSHIP
                - EVENT_REGISTRATION
                - PRODUCT
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderListResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /accounts/{id}/pledges:
    get:
      tags:
        - Accounts
      summary: Get a list of pledges for this account
      operationId: getPledgesUsingGET
      parameters:
        - name: currentPage
          in: query
          description: currentPage
          schema:
            type: integer
            format: int32
            default: 0
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: sortColumn
          in: query
          description: sortColumn
          allowEmptyValue: false
          schema:
            type: string
            default: date
            enum:
              - date
              - amount
        - name: sortDirection
          in: query
          description: sortDirection
          schema:
            type: string
            default: DESC
            enum:
              - DESC
              - ASC
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountPledgeSearchResult'
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountPledgeSearchResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /accounts/{id}/windfall:
    get:
      tags:
        - Windfall
      summary: Get Windfall data on an account
      operationId: getWindfallUsingGET
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountWindfall'
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountWindfall'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Windfall
      summary: Add Windfall data to an account
      operationId: addUsingPOST_6
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      requestBody:
        description: accountWindfallData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountWindfall'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseEntity'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: accountWindfallData
    delete:
      tags:
        - Windfall
      summary: Delete Windfall data on an account
      operationId: deleteUsingDELETE_13
      parameters:
        - name: id
          in: path
          description: Account ID
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountWindfall'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /activities:
    post:
      tags:
        - Activities
      summary: Create a activity
      operationId: createUsingPOST
      requestBody:
        description: activity
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /activities/search:
    post:
      tags:
        - Activities
      summary: Search for activities
      operationId: searchUsingPOST_1
      requestBody:
        description: searchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: searchRequest
  /activities/search/outputFields:
    get:
      tags:
        - Activities
      summary: Gets a list of possible output columns for the /activities/search method
      operationId: outputFieldsUsingGET_1
      parameters:
        - name: searchKey
          in: query
          description: searchKey
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OutputFields'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /activities/search/searchFields:
    get:
      tags:
        - Activities
      summary: Gets a list of possible search criteria fields for the /activities/search
        method
      operationId: searchFieldsUsingGET_1
      parameters:
        - name: searchKey
          in: query
          description: searchKey
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchFields'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /activities/{id}:
    get:
      tags:
        - Activities
      summary: Get an activity
      operationId: getUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Activity'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Activities
      summary: Patch an activity
      operationId: patch_13
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    put:
      tags:
        - Activities
      summary: Update an activity
      operationId: update_12
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
    delete:
      tags:
        - Activities
      summary: Delete an activity
      operationId: delete_13
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /addresses:
    post:
      tags:
        - Addresses
      summary: Creates a new address
      operationId: addUsingPOST_1
      requestBody:
        description: addressAdd
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressAdd'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: addressAdd
  /addresses/{addressId}:
    get:
      tags:
        - Addresses
      summary: Gets an address
      operationId: detailUsingGET_1
      parameters:
        - name: addressId
          in: path
          description: addressId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Address'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Addresses
      summary: Updates an address
      operationId: updateUsingPUT_1
      parameters:
        - name: addressId
          in: path
          description: addressId
          required: true
          schema:
            type: string
      requestBody:
        description: address
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: address
    delete:
      tags:
        - Addresses
      summary: Deletes an address
      operationId: deleteUsingDELETE_1
      parameters:
        - name: addressId
          in: path
          description: addressId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /addresses/{id}:
    patch:
      tags:
        - Addresses
      summary: Patch an address
      operationId: patchUsingPATCH_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: originalAddress
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalAddress
  /campaigns:
    get:
      tags:
        - Campaigns
      summary: Gets a list of campaigns
      operationId: listCampaignsUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdCodeNameTriple2'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Campaigns
      summary: Creates a campaign
      operationId: createCampaignUsingPOST
      requestBody:
        description: campaign
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: campaign
  /campaigns/{id}:
    get:
      tags:
        - Campaigns
      summary: Gets a campaign
      operationId: getCampaignUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Campaign'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Campaigns
      summary: Updates a campaign
      operationId: updateUsingPUT_2
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: campaign
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: campaign
    delete:
      tags:
        - Campaigns
      summary: Deletes a campaign
      operationId: deleteUsingDELETE_2
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Campaigns
      summary: Patch a campaign
      operationId: patchUsingPATCH_2
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: originalCampaign
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Campaign'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalCampaign
  /campaigns/{id}/p2p:
    get:
      tags:
        - Campaigns
      summary: Gets peer-to-peer fundraiser list
      operationId: getPeer2PeerFundraiserUsingGET
      parameters:
        - name: currentPage
          in: query
          description: currentPage
          schema:
            type: integer
            format: int32
            default: 1
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: pageSize
          in: query
          description: pageSize
          schema:
            type: integer
            format: int32
            default: 10
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Campaigns
      summary: Add a fundraiser to a campaign
      operationId: addFundraiserToCampaignUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: fundraiser
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CampaignFundraiser'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: fundraiser
  /customFields:
    get:
      tags:
        - Custom Fields
      summary: Gets custom fields
      operationId: listCustomFieldsUsingGET
      parameters:
        - name: category
          in: query
          description: category
          required: true
          schema:
            type: string
            enum:
              - Account
              - Donation
              - Event
              - Attendee
              - Individual
              - Company
              - Activity
              - Membership
              - Product
              - Prospect
              - Grant
        - name: isEventSpecificField
          in: query
          required: false
          schema:
            type: boolean
        - name: attendeeQuestion
          in: query
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldData'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Custom Fields
      summary: Creates a custom field
      operationId: addUsingPOST_2
      requestBody:
        description: customFieldData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldData'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: customFieldData
  /customFields/addToGroup:
    post:
      tags:
        - Custom Fields
      summary: Add a custom field to a group
      operationId: moveToGroupUsingPOST
      requestBody:
        description: moveToGroup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MoveToGroup'
        required: true
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: moveToGroup
  /customFields/groups:
    get:
      tags:
        - Custom Fields
      summary: Gets a list of custom field groups
      operationId: listUsingGET_1
      parameters:
        - name: component
          in: query
          description: component
          required: true
          schema:
            type: string
            enum:
              - Account
              - Donation
              - Event
              - Attendee
              - Individual
              - Company
              - Activity
              - Membership
              - Product
              - Prospect
              - Grant
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomFieldGroup'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Custom Fields
      summary: Creates a custom field group
      operationId: addUsingPOST_3
      requestBody:
        description: customFieldGroup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldGroup'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: customFieldGroup
  /customFields/groups/{groupId}:
    put:
      tags:
        - Custom Fields
      summary: Updates a custom field group
      operationId: updateUsingPUT_4
      parameters:
        - name: groupId
          in: path
          description: groupId
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: customFieldGroup
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseCustomFieldGroup'
        required: true
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: customFieldGroup
    delete:
      tags:
        - Custom Fields
      summary: Deletes a custom field group
      operationId: deleteUsingDELETE_4
      parameters:
        - name: groupId
          in: path
          description: groupId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /customFields/{id}:
    get:
      tags:
        - Custom Fields
      summary: Gets a custom field
      operationId: getUsingGET_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomFieldData'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Custom Fields
      summary: Updates a custom field
      operationId: updateUsingPUT_3
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: customFieldData
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomFieldData'
        required: true
      responses:
        200:
          description: OK
          content: {}
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: customFieldData
    delete:
      tags:
        - Custom Fields
      summary: Deletes a custom field
      operationId: deleteUsingDELETE_3
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /donations:
    post:
      tags:
        - Donations
      summary: Creates a new donation
      operationId: createUsingPOST_1
      requestBody:
        description: donation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Donation'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DonationResponse'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DonationResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: donation
  /donations/search:
    post:
      tags:
        - Donations
      summary: Search for donations, pledges, and pledge payments
      operationId: searchUsingPOST_2
      requestBody:
        description: searchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: searchRequest
  /donations/search/outputFields:
    get:
      tags:
        - Donations
      summary: Gets a list of possible output columns for the /donations/search method
      operationId: outputFieldsUsingGET_2
      parameters:
        - name: searchKey
          in: query
          description: searchKey
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OutputFields'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /donations/search/searchFields:
    get:
      tags:
        - Donations
      summary: Gets a list of possible search criteria fields for the /donations/search
        method
      operationId: searchFieldsUsingGET_2
      parameters:
        - name: searchKey
          in: query
          description: searchKey
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchFields'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /donations/{donationId}/payments:
    post:
      tags:
        - Donations
      summary: Add a payment for donation
      operationId: addPaymentUsingPOST
      parameters:
        - name: donationId
          in: path
          description: donationId
          required: true
          schema:
            type: string
      requestBody:
        description: payment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: payment
  /donations/{id}:
    get:
      tags:
        - Donations
      summary: Gets a donation
      operationId: getUsingGET_2
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Donation'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Donations
      summary: Updates a donation
      operationId: updateUsingPUT_5
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: donation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Donation'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DonationResponse'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DonationResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: donation
    delete:
      tags:
        - Donations
      summary: Deletes a donation
      operationId: deleteUsingDELETE_5
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Donations
      summary: Patch a donation
      operationId: patchUsingPATCH_3
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: originalDonation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Donation'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DonationResponse'
        204:
          description: No Content
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DonationResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalDonation
  /eventRegistrations:
    post:
      tags:
        - Event Registrations
      summary: Create a new event registration
      operationId: createEventRegistrationUsingPOST
      requestBody:
        description: eventRegistration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRegistration'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventRegistrationResponse'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventRegistrationResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: eventRegistration
  /eventRegistrations/calculate:
    post:
      tags:
        - Event Registrations
      summary: Calculate the correct fee for a new registration for this event
      operationId: calculateEventRegistrationUsingPOST
      requestBody:
        description: eventRegistration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRegistration'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CalculateResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CalculateResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: eventRegistration
  /eventRegistrations/{registrationId}:
    get:
      tags:
        - Event Registrations
      summary: Gets an event registration
      operationId: getUsingGET_3
      parameters:
        - name: registrationId
          in: path
          description: registrationId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventRegistration'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Event Registrations
      summary: Updates an event registration
      operationId: updateEventRegistrationUsingPUT
      parameters:
        - name: registrationId
          in: path
          description: registrationId
          required: true
          schema:
            type: string
      requestBody:
        description: eventRegistration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRegistration'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventRegistrationResponse'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventRegistrationResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: eventRegistration
    delete:
      tags:
        - Event Registrations
      summary: Deletes an event registration
      operationId: deleteUsingDELETE_7
      parameters:
        - name: registrationId
          in: path
          description: registrationId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Event Registrations
      summary: Patch an event registration
      operationId: patchUsingPATCH_5
      parameters:
        - name: registrationId
          in: path
          description: registrationId
          required: true
          schema:
            type: string
      requestBody:
        description: originalEventRegistration
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRegistration'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventRegistrationResponse'
        204:
          description: No Content
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventRegistrationResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalEventRegistration
  /eventRegistrations/{registrationId}/payments:
    post:
      tags:
        - Event Registrations
      summary: Add a payment for event registration
      operationId: addPaymentUsingPOST_1
      parameters:
        - name: registrationId
          in: path
          description: registrationId
          required: true
          schema:
            type: string
      requestBody:
        description: payment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: payment
  /grants:
    post:
      tags:
      - Grants
      summary: Create a grant
      operationId: create_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grant'
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/IdResult'
        '400':
          description: Bad Request
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /grants/search:
    post:
      tags:
      - Grants
      summary: Search for grants
      operationId: search_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          description: Bad Request
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /events:
    get:
      tags:
        - Events
      summary: Gets a list of events
      operationId: listUsingGET_2
      parameters:
        - name: archived
          in: query
          schema:
            type: boolean
        - name: currentPage
          in: query
          schema:
            type: integer
            format: int32
        - name: endDateAfter
          in: query
          schema:
            type: string
            format: date-time
        - name: endDateBefore
          in: query
          schema:
            type: string
            format: date-time
        - name: eventCategory
          in: query
          schema:
            type: integer
            format: int32
        - name: eventId
          in: query
          schema:
            type: integer
            format: int32
        - name: eventName
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: publishedEvent
          in: query
          schema:
            type: boolean
        - name: startDateAfter
          in: query
          schema:
            type: string
            format: date-time
        - name: startDateBefore
          in: query
          schema:
            type: string
            format: date-time
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventSearchResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Events
      summary: Creates an event
      operationId: createEventUsingPOST
      requestBody:
        description: event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: event
  /events/categories:
    get:
      tags:
        - Events
      summary: Gets event categories
      operationId: categoriesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /events/search:
    post:
      tags:
        - Events
      summary: Search for events
      operationId: searchUsingPOST_3
      requestBody:
        description: searchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: searchRequest
  /events/search/outputFields:
    get:
      tags:
        - Events
      summary: Gets a list of possible output columns for the /events/search method
      operationId: outputFieldsUsingGET_3
      parameters:
        - name: searchKey
          in: query
          description: searchKey
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OutputFields'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /events/search/searchFields:
    get:
      tags:
        - Events
      summary: Gets a list of possible search criteria fields for the /events/search
        method
      operationId: searchFieldsUsingGET_3
      parameters:
        - name: searchKey
          in: query
          description: searchKey
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchFields'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /grants/{id}:
    get:
      tags:
      - Grants
      summary: Get a grant
      operationId: get_4
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/Grant'
        '400':
          description: Bad Request
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    put:
      tags:
      - Grants
      summary: Update a grant
      operationId: update_11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grant'
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/IdResult'
        '400':
          description: Bad Request
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    delete:
      tags:
      - Grants
      summary: Delete a grant
      operationId: delete_6
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    patch:
      tags:
      - Grants
      summary: Patch a grant
      operationId: patch_7
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grant'
        required: true
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/IdResult'
        '400':
          description: Bad Request
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /events/{id}:
    get:
      tags:
        - Events
      summary: Gets an event
      operationId: getEventUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Event'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Events
      summary: Updates an event
      operationId: updateUsingPUT_6
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: event
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: event
    delete:
      tags:
        - Events
      summary: Deletes an event
      operationId: deleteUsingDELETE_6
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Events
      summary: Patch an event
      operationId: patchUsingPATCH_4
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: originalEvent
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalEvent
  /events/{id}/attendees:
    get:
      tags:
        - Events
      summary: Get a list of attendees for an event
      operationId: getEventAttendeesUsingGET
      parameters:
        - name: currentPage
          in: query
          description: currentPage
          schema:
            type: integer
            format: int32
            default: 0
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventAttendees'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /grants/search/searchFields:
      get:
        tags:
        - Grants
        summary: Gets a list of possible search criteria fields for the /grants/search
          method
        operationId: searchFields_1
        parameters:
        - name: searchKey
          in: query
          required: true
          schema:
            type: string
        responses:
          '200':
            description: OK
            content:
              "*/*":
                schema:
                  $ref: '#/components/schemas/SearchFields'
          '400':
            description: Bad Request
            content:
              "*/*":
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/APIMessage'
          '404':
            description: Not Found
            content:
              "*/*":
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/APIMessage'
          '415':
            description: Unsupported Media Type
            content:
              "*/*":
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/APIMessage'
          '500':
            description: Internal Server Error
            content:
              "*/*":
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/APIMessage'
  /grants/search/outputFields:
    get:
      tags:
      - Grants
      summary: Gets a list of possible output columns for the /grants/search method
      operationId: outputFields_1
      parameters:
      - name: searchKey
        in: query
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                $ref: '#/components/schemas/OutputFields'
        '400':
          description: Bad Request
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            "*/*":
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /events/{id}/eventRegistrations:
    get:
      tags:
        - Events
      summary: Get a list of event registrations for this event
      operationId: getEventRegistrationsUsingGET_1
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: registrantAccountId
          in: query
          schema:
            type: string
        - name: sortDirection
          in: query
          schema:
            type: string
            enum:
              - DESC
              - ASC
        - name: sortField
          in: query
          schema:
            type: string
            enum:
              - registrationDateTime
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationEventRegistration'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /events/{id}/tickets:
    get:
      tags:
        - Events
      summary: Get a list of ticket options for an event
      operationId: getEventTicketsUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventTicket'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Events
      summary: Add a ticket option to an event
      operationId: createEventTicketUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: eventTicket
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTicket'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: eventTicket
  /events/{id}/tickets/{ticketId}:
    get:
      tags:
        - Events
      summary: Gets a ticket option
      operationId: getEventTicketUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: ticketId
          in: path
          description: ticketId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EventTicket'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Events
      summary: Update a ticket option
      operationId: updateEventTicketUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: ticketId
          in: path
          description: ticketId
          required: true
          schema:
            type: string
      requestBody:
        description: eventTicket
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTicket'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: eventTicket
    delete:
      tags:
        - Events
      summary: Delete a ticket option
      operationId: deleteTicketUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: ticketId
          in: path
          description: ticketId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Events
      summary: Patch an event ticket
      operationId: patchUsingPATCH_6
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: ticketId
          in: path
          description: ticketId
          required: true
          schema:
            type: string
      requestBody:
        description: originalEventTicket
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTicket'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalEventTicket
  /memberships:
    post:
      tags:
        - Memberships
      summary: Create a membership
      operationId: createUsingPOST_2
      requestBody:
        description: membership
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MembershipResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: membership
  /memberships/calculateDates:
    post:
      tags:
        - Memberships
      summary: Calculate the membership term start and end dates
      operationId: calculateDatesUsingPOST
      requestBody:
        description: membership
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseMembership'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MembershipCalculateDatesResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: membership
  /memberships/calculateFee:
    post:
      tags:
        - Memberships
      summary: Calculate the cost a membership
      operationId: calculateFeeUsingPOST
      requestBody:
        description: membership
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MembershipCalculateResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: membership
  /memberships/levels:
    get:
      tags:
        - Memberships
      summary: Get a list of membership levels
      operationId: listMembershipLevelsUsingGET
      parameters:
        - name: currentPage
          in: query
          description: 'Default value : 0'
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: 'Default value : 20'
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          description: status
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MembershipLevelsResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /memberships/terms:
    get:
      tags:
        - Memberships
      summary: Get a list of membership terms
      operationId: listMembershipTermsUsingGET
      parameters:
        - name: currentPage
          in: query
          description: 'Default value : 0'
          schema:
            type: integer
            format: int32
        - name: levelId
          in: query
          description: levelId
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Default value : 20'
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MembershipTermsResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /memberships/{membershipId}:
    get:
      tags:
        - Memberships
      summary: Get a membership
      operationId: getMembershipUsingGET
      parameters:
        - name: membershipId
          in: path
          description: membershipId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Membership'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Memberships
      summary: Update a membership
      operationId: updateUsingPUT_7
      parameters:
        - name: membershipId
          in: path
          description: membershipId
          required: true
          schema:
            type: string
      requestBody:
        description: membership
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseMembership'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MembershipResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: membership
    delete:
      tags:
        - Memberships
      summary: Delete a membership
      operationId: deleteMembershipUsingDELETE
      parameters:
        - name: membershipId
          in: path
          description: membershipId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseEntity'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Memberships
      summary: Patch a membership
      operationId: patchUsingPATCH_7
      parameters:
        - name: membershipId
          in: path
          description: membershipId
          required: true
          schema:
            type: string
      requestBody:
        description: originalMembership
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseMembership'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MembershipResponse'
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalMembership
  /memberships/{membershipId}/autoRenewal:
    get:
      tags:
        - Memberships
      summary: Get auto-renewal of a membership
      operationId: getAutoRenewalUsingGET
      parameters:
        - name: membershipId
          in: path
          description: membershipId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MembershipAutoRenewal'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Memberships
      summary: Edit auto-renewal for a membership
      operationId: autoRenewalUsingPOST
      parameters:
        - name: membershipId
          in: path
          description: membershipId
          required: true
          schema:
            type: string
      requestBody:
        description: autoRenewal
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MembershipAutoRenewal'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseEntity'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: autoRenewal
  /memberships/{membershipId}/payments:
    post:
      tags:
        - Memberships
      summary: Add a payment for membership
      operationId: addPaymentUsingPOST_2
      parameters:
        - name: membershipId
          in: path
          description: membershipId
          required: true
          schema:
            type: string
      requestBody:
        description: payment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: payment
  /memberships/{membershipId}/renew:
    post:
      tags:
        - Memberships
      summary: Renew an existing membership
      operationId: renewUsingPOST
      parameters:
        - name: membershipId
          in: path
          description: membershipId
          required: true
          schema:
            type: string
      requestBody:
        description: membership
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Membership'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/MembershipResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: membership
  /memberships/{membershipId}/subMembers:
    get:
      tags:
        - Memberships
      summary: Get a list of sub-membership
      operationId: getSubMembershipUsingGET
      parameters:
        - name: membershipId
          in: path
          description: membershipId
          required: true
          schema:
            type: string
        - name: isCurrentEmployee
          in: query
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubMembership'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /payments:
    post:
      tags:
        - Payments
      summary: Add additional payments to a transaction
      operationId: add_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPaymentRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubMembership'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /payments/{id}/refund:
    post:
      tags:
        - Payments
      summary: Refund an Neon Pay payment or cancel a offline payment
      operationId: refund
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubMembership'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
  /orders:
    post:
      tags:
        - Orders
      summary: Create a store order
      operationId: createUsingPOST_3
      requestBody:
        description: order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: order
  /orders/calculate:
    post:
      tags:
        - Orders
      summary: ' Calculate the total cost of the order'
      operationId: calculateUsingPOST
      requestBody:
        description: order
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderCalculationResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrderCalculationResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: order
  /orders/search:
    post:
      tags:
        - Orders
      summary: Search for orders
      operationId: searchUsingPOST_4
      requestBody:
        description: searchRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: searchRequest
  /orders/search/outputFields:
    get:
      tags:
        - Orders
      summary: Gets a list of possible output columns for the /orders/search method
      operationId: outputFieldsUsingGET_4
      parameters:
        - name: searchKey
          in: query
          description: searchKey
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OutputFields'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /orders/search/searchFields:
    get:
      tags:
        - Orders
      summary: Gets a list of possible search criteria fields for the /orders/search
        method
      operationId: searchFieldsUsingGET_4
      parameters:
        - name: searchKey
          in: query
          description: searchKey
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchFields'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /orders/shippingMethods:
    post:
      tags:
        - Orders
      summary: Get a list of shipping methods
      operationId: listShippingMethodUsingPOST
      requestBody:
        description: shippingMethodRequest
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingMethodRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ShippingMethodResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: shippingMethodRequest
  /orders/{id}:
    get:
      tags:
        - Orders
      summary: Gets an order
      operationId: getUsingGET_4
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    delete:
      tags:
        - Orders
      summary: Deletes an order
      operationId: deleteUsingDELETE_8
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /orders/{orderId}/payments:
    post:
      tags:
        - Orders
      summary: Add a payment for order
      operationId: addPaymentUsingPOST_3
      parameters:
        - name: orderId
          in: path
          description: orderId
          required: true
          schema:
            type: string
      requestBody:
        description: payment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: payment
  /payments/creditCardTypes:
    get:
      tags:
        - Payments
      summary: Gets credit card types
      operationId: listCreditCardTypesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /payments/donorCoveredFees:
    get:
      tags:
        - Payments
      summary: Calculate the donor covered fee according to the transaction amount
      operationId: calcDonorCoveredFeesUsingGET
      parameters:
        - name: transactionAmount
          in: query
          description: transactionAmount
          required: true
          schema:
            type: number
            format: double
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DonorCoveredFees'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /payments/processorSettings:
    get:
      tags:
        - Payments
      summary: Gets configuration settings specific to the payment processor in use
      operationId: retrievePaymentProcessSettingUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProcessorSettings'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /payments/tenders:
    get:
      tags:
        - Payments
      summary: Gets tender types
      operationId: listTendersUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /pledges:
    post:
      tags:
        - Pledges
      summary: Creates a new pledge
      operationId: createUsingPOST_4
      requestBody:
        description: pledge
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pledge'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: pledge
  /pledges/{id}:
    get:
      tags:
        - Pledges
      summary: Gets a Pledge
      operationId: getUsingGET_5
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Pledge'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Pledges
      summary: Updates a pledge
      operationId: updateUsingPUT_8
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: pledge
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pledge'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: pledge
    delete:
      tags:
        - Pledges
      summary: Deletes a pledge
      operationId: deleteUsingDELETE_9
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Pledges
      summary: Patch a pledge
      operationId: patchUsingPATCH_8
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: originalDonation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pledge'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        204:
          description: No Content
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalDonation
  /pledges/{id}/pledgePayments:
    get:
      tags:
        - Pledges
      summary: Gets a list of payments towards a specific pledge
      operationId: listPledgePaymentsUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PledgePayment'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Pledges
      summary: Creates a new pledge payment
      operationId: createPledgePaymentUsingPOST
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: pledgePayment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PledgePayment'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PledgePaymentResponse'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: pledgePayment
  /pledges/{id}/pledgePayments/{paymentId}:
    get:
      tags:
        - Pledges
      summary: Gets a single pledge payment
      operationId: getPledgePaymentUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: paymentId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PledgePayment'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    delete:
      tags:
        - Pledges
      summary: Deletes an existing pledge payment
      operationId: deletePledgePaymentUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: paymentId
          in: path
          description: paymentId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /pledges/{pledgeId}/installments:
    get:
      tags:
        - Pledges
      summary: Retrieve a list of pledge installment.
      operationId: retrieveInstallmentsUsingGET
      parameters:
        - name: pledgeId
          in: path
          description: pledgeId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Installment'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Pledges
      summary: Create a pledge installment.
      operationId: createInstallmentUsingPOST
      parameters:
        - name: pledgeId
          in: path
          description: pledgeId
          required: true
          schema:
            type: string
      requestBody:
        description: installment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Installment'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Installment'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: installment
  /pledges/{pledgeId}/installments/{id}:
    get:
      tags:
        - Pledges
      summary: Retrieve a pledge installment.
      operationId: retrieveInstallmentUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: pledgeId
          in: path
          description: pledgeId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Installment'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Pledges
      summary: Update a pledge installment.
      operationId: updateInstallmentUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: pledgeId
          in: path
          description: pledgeId
          required: true
          schema:
            type: string
      requestBody:
        description: installment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Installment'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Installment'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: installment
    delete:
      tags:
        - Pledges
      summary: Delete a pledge installment.
      operationId: deleteInstallmentUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
        - name: pledgeId
          in: path
          description: pledgeId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content: {}
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/activityStatuses:
    get:
      tags:
        - Properties
      summary: Gets a list of available Activity Statuses
      operationId: listActivityStatusesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/addressTypes:
    get:
      tags:
        - Properties
      summary: Gets address types
      operationId: listAddressTypesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/companyTypes:
    get:
      tags:
        - Properties
      summary: Gets company types
      operationId: listCompanyTypesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/countries:
    get:
      tags:
        - Properties
      summary: Gets countries
      operationId: listCountriesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/currentSystemUser:
    get:
      tags:
        - Properties
      summary: Gets current system user
      operationId: currentSystemUserUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SystemUser'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/eventCategories:
    get:
      tags:
        - Properties
      summary: Gets Event Categories
      operationId: listEventCategoriesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/eventTopics:
    get:
      tags:
        - Properties
      summary: Gets Event Topics
      operationId: listEventTopicUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/funds:
    get:
      tags:
        - Properties
      summary: Gets funds
      operationId: listFundsUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdCodeNameTriple2'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/genders:
    get:
      tags:
        - Properties
      summary: Gets genders
      operationId: listGendersUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenderVO'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/individualTypes:
    get:
      tags:
        - Properties
      summary: Gets individual types
      operationId: listIndividualTypesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/organizationProfile:
    get:
      tags:
        - Properties
      summary: Gets organization profile
      operationId: getOrganizationProfileUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationProfile'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/prefixes:
    get:
      tags:
        - Properties
      summary: Gets prefixes
      operationId: listPrefixesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/purposes:
    get:
      tags:
        - Properties
      summary: Gets purposes
      operationId: listPurposesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdCodeNameTriple2'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/relationTypes:
    get:
      tags:
        - Properties
      summary: Gets relation types
      operationId: listRelationTypesUsingGET
      parameters:
        - name: relationTypeCategory
          in: query
          description: relationTypeCategory
          schema:
            type: string
            enum:
              - INDIVIDUAL_INDIVIDUAL
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/solicitationMethods:
    get:
      tags:
        - Properties
      summary: Gets a list of solicitation methods
      operationId: listSolicitationMethodsUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/sources:
    get:
      tags:
        - Properties
      summary: Gets sources
      operationId: listSourcesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdCodeNameTriple'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/stateProvinces:
    get:
      tags:
        - Properties
      summary: Gets states
      operationId: listStatesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodeNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/systemTimezones:
    get:
      tags:
        - Properties
      summary: Gets system timezones
      operationId: listSystemTimezonesUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdNamePair'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /properties/systemUsers:
    get:
      tags:
        - Properties
      summary: Gets system users
      operationId: listSystemUsersUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SystemUser'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /recurring:
    get:
      tags:
        - Recurring Donations
      summary: Gets a list of recurring donation schedules
      operationId: listRecurringUsingGET
      parameters:
        - name: accountId
          in: query
          description: accountId
          schema:
            type: string
        - name: cardExpirationFrom
          in: query
          schema:
            type: string
        - name: cardExpirationTo
          in: query
          schema:
            type: string
        - name: currentPage
          in: query
          schema:
            type: integer
            format: int32
        - name: nextRecurringFrom
          in: query
          schema:
            type: string
        - name: nextRecurringTo
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: setupDateFrom
          in: query
          schema:
            type: string
        - name: setupDateTo
          in: query
          schema:
            type: string
        - name: sortColumn
          in: query
          schema:
            type: string
            enum:
              - lastName
              - firstName
              - amount
              - nextPaymentDate
              - endDate
        - name: sortDirection
          in: query
          schema:
            type: string
            enum:
              - DESC
              - ASC
        - name: status
          in: query
          schema:
            type: string
            enum:
              - Active
              - Inactive
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RecurringDonationsResponse'
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RecurringDonationsResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Recurring Donations
      summary: Creates a new recurring donation schedule
      operationId: createRecurringUsingPOST
      requestBody:
        description: recurringDonation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecurringDonation'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: recurringDonation
  /recurring/{id}:
    get:
      tags:
        - Recurring Donations
      summary: Gets a recurring donation schedule
      operationId: getRecurringUsingGET
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RecurringDonation'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Recurring Donations
      summary: Updates a recurring donation schedule
      operationId: updateRecurringUsingPUT
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: recurringDonation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecurringDonation'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: recurringDonation
    delete:
      tags:
        - Recurring Donations
      summary: Deletes a recurring donation schedule
      operationId: deleteRecurringUsingDELETE
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Recurring Donations
      summary: Patch a recurring donation schedule
      operationId: patchUsingPATCH_9
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: originalRecurringDonation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecurringDonation'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalRecurringDonation
  /shippingAddresses:
    post:
      tags:
        - ShippingAddresses
      summary: Creates a new shipping address
      operationId: addUsingPOST_4
      requestBody:
        description: addressAdd
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingAddressAdd'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: addressAdd
  /shippingAddresses/{addressId}:
    get:
      tags:
        - ShippingAddresses
      summary: Gets a shipping address
      operationId: detailUsingGET_2
      parameters:
        - name: addressId
          in: path
          description: addressId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ShippingAddress'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - ShippingAddresses
      summary: Updates a shipping address
      operationId: updateUsingPUT_9
      parameters:
        - name: addressId
          in: path
          description: addressId
          required: true
          schema:
            type: string
      requestBody:
        description: address
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingAddress'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: address
    delete:
      tags:
        - ShippingAddresses
      summary: Deletes a shipping address
      operationId: deleteUsingDELETE_10
      parameters:
        - name: addressId
          in: path
          description: addressId
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /shippingAddresses/{id}:
    patch:
      tags:
        - ShippingAddresses
      summary: Patch a shipping address
      operationId: patchUsingPATCH_10
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: originalAddress
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShippingAddress'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalAddress
  /softCredits:
    get:
      tags:
        - SoftCredits
      summary: Gets a list of soft credits
      operationId: getListUsingGET
      parameters:
        - name: accountId
          in: query
          schema:
            type: string
        - name: currentPage
          in: query
          schema:
            type: integer
            format: int32
        - name: donationId
          in: query
          schema:
            type: string
        - name: eventRegistrationId
          in: query
          schema:
            type: string
        - name: membershipId
          in: query
          schema:
            type: string
        - name: orderId
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SoftCreditSearchResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - SoftCredits
      summary: Creates a soft credit
      operationId: addUsingPOST_5
      requestBody:
        description: apiSoftCredit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftCredit'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: apiSoftCredit
  /softCredits/{id}:
    get:
      tags:
        - SoftCredits
      summary: Gets a soft credit
      operationId: getUsingGET_6
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SoftCredit'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - SoftCredits
      summary: Updates a soft credit
      operationId: updateUsingPUT_10
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: apiSoftCredit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftCredit'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: apiSoftCredit
    delete:
      tags:
        - SoftCredits
      summary: Deletes a soft credit
      operationId: deleteUsingDELETE_11
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - SoftCredits
      summary: Patch a soft credit
      operationId: patchUsingPATCH_11
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: originalSoftCredit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftCredit'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        204:
          description: No Content
          content: {}
        222:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountIdAndRefIdResult'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalSoftCredit
  /store/catalogs:
    get:
      tags:
        - Online Store
      summary: ' Get a list of store catalogs'
      operationId: listCatalogUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Catalog'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /store/categories:
    get:
      tags:
        - Online Store
      summary: Get a list of store categories
      operationId: listCategoryUsingGET
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /store/products:
    get:
      tags:
        - Online Store
      summary: Get a list of store products
      operationId: listProductUsingGET
      parameters:
        - name: catalogId
          in: query
          schema:
            type: string
        - name: categoryId
          in: query
          schema:
            type: string
        - name: code
          in: query
          schema:
            type: string
        - name: currentPage
          in: query
          description: 'Default value : 0'
          schema:
            type: integer
            format: int32
        - name: keyword
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          description: 'Default value : 20'
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProductSearchResponse'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /store/products/{productId}:
    get:
      tags:
        - Online Store
      summary: Get a product
      operationId: getProductUsingGET
      parameters:
        - name: productId
          in: path
          description: productId
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /webhooks:
    get:
      tags:
        - Webhooks
      summary: Gets a list of webhook subscriptions
      operationId: listUsingGET_3
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Webhooks
      summary: Create a new webhook subscription
      operationId: createUsingPOST_5
      requestBody:
        description: webhook
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: webhook
  /webhooks/{id}:
    get:
      tags:
        - Webhooks
      summary: Retrieve a webhook subscription
      operationId: detailUsingGET_3
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Webhook'
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Webhooks
      summary: Update a webhook subscription
      operationId: updateUsingPUT_11
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: webhook
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
        404:
          description: Not Found
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: webhook
    delete:
      tags:
        - Webhooks
      summary: Delete a webhook subscription
      operationId: deleteUsingDELETE_12
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Webhooks
      summary: Patch a webhook
      operationId: patchUsingPATCH_12
      parameters:
        - name: id
          in: path
          description: id
          required: true
          schema:
            type: string
      requestBody:
        description: originalWebhook
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: Unauthorized
          content: {}
        403:
          description: Forbidden
          content: {}
      deprecated: false
      security:
        - X-API-KEY:
            - global
      x-codegen-request-body-name: originalWebhook
  /volunteers:
    get:
      tags:
        - Volunteers
      summary: Get a list of volunteers
      operationId: pageVolunteers
      parameters:
        - name: searchParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/VolunteerSearchParam'
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VolunteerSearchResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /groups/{id}:
    get:
      tags:
        - Volunteer Groups
      summary: Get a volunteer group
      operationId: get_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserGroupApi'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Volunteer Groups
      summary: Update a volunteer group
      operationId: update_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupApi'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    delete:
      tags:
        - Volunteer Groups
      summary: Delete a volunteer group
      operationId: delete_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /groups:
    post:
      tags:
        - Volunteer Groups
      summary: Create a volunteer group
      operationId: createOrUpdate_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGroupApi'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /groups/{id}/addVolunteers:
    post:
      tags:
        - Volunteer Groups
      summary: Add volunteers to a volunteer group
      operationId: addVolunteers_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolunteerAccountIds'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /groups/{id}/volunteers:
    get:
      tags:
        - Volunteer Groups
      summary: Get a list of volunteers in a volunteer group
      operationId: pageVolunteers_4
      parameters:
        - name: volunteerSearchParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/GroupVolunteerSearchParam'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VolunteerSearchResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /groups/list:
    get:
      tags:
        - Volunteer Groups
      summary: Get a list of volunteer groups
      operationId: list_5
      parameters:
        - name: searchParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/UserGroupSearchParam'
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserGroupSearchResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /groups/{id}/removeVolunteers:
    delete:
      tags:
        - Volunteer Groups
      summary: Remove volunteers from a volunteer group
      operationId: removeVolunteers_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolunteerAccountIds'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /opportunities:
    get:
      tags:
        - Volunteer Opportunities
      summary: Get a list of volunteer opportunities
      operationId: list_3
      parameters:
        - name: searchParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/OpportunitySearchParam'
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OpportunitySearchResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Volunteer Opportunities
      summary: Create a volunteer opportunity
      operationId: create_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /opportunities/{id}:
    get:
      tags:
        - Volunteer Opportunities
      summary: Get a volunteer opportunity
      operationId: get_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Opportunity'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Volunteer Opportunities
      summary: Update a volunteer opportunity
      operationId: update_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    delete:
      tags:
        - Volunteer Opportunities
      summary: Delete a volunteer opportunity
      operationId: delete_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Volunteer Opportunities
      summary: Patch a volunteer opportunity
      operationId: patch_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Opportunity'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /opportunities/{id}/volunteers:
    get:
      tags:
        - Volunteer Opportunities
      summary: Get a list of volunteers assigned to a volunteer opportunity
      operationId: pageVolunteers_3
      parameters:
        - name: searchParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/OpportunityVolunteerSearchParam'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VolunteerSearchResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /opportunities/{id}/addVolunteers:
    post:
      tags:
        - Volunteer Opportunities
      summary: Add volunteers to a volunteer opportunity
      operationId: addVolunteers_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignmentVolunteers'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /opportunities/{id}/removeVolunteers:
    delete:
      tags:
        - Volunteer Opportunities
      summary: Remove volunteers from an opportunity
      operationId: removeVolunteers_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolunteerAccountIds'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /roles:
    post:
      tags:
        - Volunteer Roles
      summary: Create a volunteer role
      operationId: createOrUpdate_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolunteerRoleApi'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /roles/list:
    get:
      tags:
        - Volunteer Roles
      summary: Get a list of volunteer roles
      operationId: list_2
      parameters:
        - name: searchParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/VolunteerRoleSearchParam'
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VolunteerRoleSearchResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /roles/{id}:
    get:
      tags:
        - Volunteer Roles
      summary: Get a volunteer role
      operationId: get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VolunteerRoleApi'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Volunteer Roles
      summary: Update a volunteer role
      operationId: update_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolunteerRoleApi'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    delete:
      tags:
        - Volunteer Roles
      summary: Delete a volunteer role
      operationId: delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /roles/{id}/volunteers:
    get:
      tags:
        - Volunteer Roles
      summary: Get a list of volunteers assigned to a role
      operationId: pageVolunteers_1
      parameters:
        - name: volunteerSearchParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/RoleVolunteerSearchParam'
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VolunteerSearchResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /opportunities/{opportunityId}/shifts:
    get:
      tags:
        - Volunteer Shifts
      summary: Gets a list of volunteer shifts for a volunteer opportunity
      operationId: listByOpportunityId
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
        - name: searchParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/OpportunityShiftSearchParam'
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OpportunityShiftSearchResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Volunteer Shifts
      summary: Create a shift associated with a volunteer opportunity
      operationId: create_4
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunityShift'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /opportunities/{opportunityId}/shifts/{shiftId}:
    get:
      tags:
        - Volunteer Shifts
      summary: Get a volunteer shift
      operationId: get_5
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
        - name: shiftId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OpportunityShift'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Volunteer Shifts
      summary: Update a volunteer shift
      operationId: update_6
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
        - name: shiftId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunityShift'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    delete:
      tags:
        - Volunteer Shifts
      summary: Delete a volunteer shift
      operationId: delete_7
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
        - name: shiftId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Volunteer Shifts
      summary: Patch a volunteer shfit
      operationId: patch_6
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
        - name: shiftId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpportunityShift'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /opportunities/{opportunityId}/shifts/{id}/volunteers:
    get:
      tags:
        - Volunteer Shifts
      summary: Get a list of volunteers assigned to a shift
      operationId: pageVolunteers_2
      parameters:
        - name: volunteerSearchParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/ShiftVolunteerSearchParam'
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VolunteerSearchResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /opportunities/{opportunityId}/shifts/{id}/addVolunteers:
    post:
      tags:
        - Volunteer Shifts
      summary: Add volunteers to a shift
      operationId: addVolunteers
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolunteerAccountIds'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /opportunities/{opportunityId}/shifts/{id}/removeVolunteers:
    delete:
      tags:
        - Volunteer Shifts
      summary: Remove volunteers from a shift
      operationId: removeVolunteers
      parameters:
        - name: opportunityId
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VolunteerAccountIds'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /timeSheets:
    get:
      tags:
        - Volunteer Time Sheets
      summary: Get volunteer time sheets
      operationId: list_1
      parameters:
        - name: searchParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/TimeSheetSearchParam'
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeSheetSearchResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    post:
      tags:
        - Volunteer Time Sheets
      summary: Create a volunteer time sheet
      operationId: createOrUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSheetApi'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /timeSheets/{id}:
    get:
      tags:
        - Volunteer Time Sheets
      summary: Get a Volunteer Time Sheet
      operationId: get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TimeSheetApi'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    put:
      tags:
        - Volunteer Time Sheets
      summary: Update a volunteer time sheet
      operationId: update_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSheetApi'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    delete:
      tags:
        - Volunteer Time Sheets
      summary: Delete a volunteer time sheet
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
    patch:
      tags:
        - Volunteer Time Sheets
      summary: Patch a volunteer time sheet
      operationId: patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSheetApi'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        400:
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        404:
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        415:
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        500:
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
      deprecated: false
      security:
        - X-API-KEY:
            - global
  /customObjects/{idOrApiAlias}:
    get:
      tags:
        - Custom Objects
      summary: Get a custom object
      operationId: get_12
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    put:
      tags:
        - Custom Objects
      summary: Update a custom object
      operationId: update_14
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomObject'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    delete:
      tags:
        - Custom Objects
      summary: Delete a custom object
      operationId: delete_15
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    patch:
      tags:
        - Custom Objects
      summary: Patch a custom object
      operationId: patch_15
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomObject'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects:
    get:
      tags:
        - Custom Objects
      summary: Get a list of custom objects
      operationId: list_9
      parameters:
        - name: customObjectPage
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageParam'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseCustomObjectResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    post:
      tags:
        - Custom Objects
      summary: Create a custom object
      operationId: create_9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomObject'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{idOrApiAlias}/updateStatus:
    post:
      tags:
        - Custom Objects
      summary: Update a custom object's status
      operationId: statusUpdate
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectStatus'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{idOrApiAlias}/emailNotifications:
    post:
      tags:
        - Custom Objects
      summary: Update the custom object email notification type
      operationId: emailNotification
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectEmailNotification'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectEmailNotification'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{idOrApiAlias}/fields/{fieldAlias}:
    get:
      tags:
        - Custom Object Fields
      summary: Get a custom object field
      operationId: get_15
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: fieldAlias
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectFieldResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    put:
      tags:
        - Custom Object Fields
      summary: Update a custom object field
      operationId: update_17
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: fieldAlias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCustomObjectField'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectFieldResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    delete:
      tags:
        - Custom Object Fields
      summary: Delete a custom object field
      operationId: delete_18
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: fieldAlias
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    patch:
      tags:
        - Custom Object Fields
      summary: Patch a custom object field
      operationId: patch_18
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: fieldAlias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditCustomObjectField'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectFieldResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{idOrApiAlias}/fields:
    get:
      tags:
        - Custom Object Fields
      summary: Get a list of custom object fields
      operationId: list_11
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: pageParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageParam'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/PaginationResponseCustomObjectFieldListResponse
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    post:
      tags:
        - Custom Object Fields
      summary: Create a custom object field
      operationId: create_12
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectField'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectFieldResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{idOrApiAlias}/masterDetailObjects:
    get:
      tags:
        - Custom Object Fields
      summary: List master/detail objects
      operationId: masterDetailObjects
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListObjectsResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/lookupObjects:
    get:
      tags:
        - Custom Object Fields
      summary: List lookup objects
      operationId: lookupObjects
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListObjectsResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{apiAlias}/formLayouts/{id}:
    get:
      tags:
        - Custom Object Form Layouts
      summary: Get a custom object form layout
      operationId: get_17
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectFormLayoutResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    put:
      tags:
        - Custom Object Form Layouts
      summary: Update a custom object form layout
      operationId: update_19
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectFormLayout'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectFormLayoutEntryResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    delete:
      tags:
        - Custom Object Form Layouts
      summary: Delete a custom object form layout
      operationId: delete_20
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    patch:
      tags:
        - Custom Object Form Layouts
      summary: Patch a custom object form layout
      operationId: patch_20
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectFormLayout'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectFormLayoutEntryResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{apiAlias}/formLayouts:
    get:
      tags:
        - Custom Object Form Layouts
      summary: Get a list of custom object form layouts
      operationId: list_13
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
        - name: pageParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageParam'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/PaginationResponseCustomObjectLayoutPageItem
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    post:
      tags:
        - Custom Object Form Layouts
      summary: Create a custom object form layout
      operationId: create_14
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectFormLayout'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectFormLayoutEntryResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{apiAlias}/listLayouts/{id}:
    get:
      tags:
        - Custom Object List Layouts
      summary: Get a custom object list layout
      operationId: get_16
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectListLayoutResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    put:
      tags:
        - Custom Object List Layouts
      summary: Update a custom object list layout
      operationId: update_18
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectListLayout'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectListLayoutEntryResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    delete:
      tags:
        - Custom Object List Layouts
      summary: Delete a custom object list layout
      operationId: delete_19
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    patch:
      tags:
        - Custom Object List Layouts
      summary: Patch a custom object list layout
      operationId: patch_19
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectListLayout'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectListLayoutEntryResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{apiAlias}/listLayouts:
    get:
      tags:
        - Custom Object List Layouts
      summary: Get a list of custom object list layouts
      operationId: list_12
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
        - name: pageParam
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageParam'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/PaginationResponseCustomObjectLayoutPageItem
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    post:
      tags:
        - Custom Object List Layouts
      summary: Create a custom object list layout
      operationId: create_13
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectListLayout'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectListLayoutEntryResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{idOrApiAlias}/records/{id}:
    get:
      tags:
        - Custom Object Records
      summary: Get a custom object record
      operationId: get_14
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RecordResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    put:
      tags:
        - Custom Object Records
      summary: Update a custom object record
      operationId: update_16
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectRecord'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RecordResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    delete:
      tags:
        - Custom Object Records
      summary: Delete a custom object record
      operationId: delete_17
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    patch:
      tags:
        - Custom Object Records
      summary: Patch a custom object record
      operationId: patch_17
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectRecord'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RecordResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{idOrApiAlias}/records:
    post:
      tags:
        - Custom Object Records
      summary: Create a custom object record
      operationId: create_11
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectRecord'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RecordResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{idOrApiAlias}/records/list:
    post:
      tags:
        - Custom Object Records
      summary: List custom object records
      operationId: list
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecordSearchParam'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaginationResponseListRecordResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{apiAlias}/relations:
    get:
      tags:
        - Custom Object Relations
      summary: Get a list of custom object relations
      operationId: listRelations
      parameters:
        - name: apiAlias
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectRelationListResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{idOrApiAlias}/validators/{id}:
    get:
      tags:
        - Custom Object Validators
      summary: Get a custom object validator
      operationId: get_13
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectValidatorRuleResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    put:
      tags:
        - Custom Object Validators
      summary: Update a custom object validator
      operationId: update_15
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectValidatorRule'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectValidatorRuleResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    delete:
      tags:
        - Custom Object Validators
      summary: Delete a custom object validator
      operationId: delete_16
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectValidatorRuleResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    patch:
      tags:
        - Custom Object Validators
      summary: Patch a custom object validator
      operationId: patch_16
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectValidatorRule'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectValidatorRuleResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /customObjects/{idOrApiAlias}/validators:
    get:
      tags:
        - Custom Object Validators
      summary: Get a list of custom object validators
      operationId: list_10
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
        - name: validatorPage
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/PageParam'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: >-
                  #/components/schemas/PaginationResponseCustomObjectValidatorRuleResponse
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    post:
      tags:
        - Custom Object Validators
      summary: Create a custom object validator
      operationId: create_10
      parameters:
        - name: idOrApiAlias
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomObjectValidatorRule'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomObjectValidatorRuleResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /households/{id}:
    put:
      tags:
        - Households
      summary: Update a household
      operationId: update_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseHoldDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
    delete:
      tags:
        - Households
      summary: Delete a household
      operationId: delete_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /households:
    post:
      tags:
        - Households
      summary: Create a household
      operationId: create_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HouseHoldDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/IdResult'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /households/listRelationTypes:
    get:
      tags:
        - Households
      summary: List relation types
      operationId: listRelationTypes_1
      parameters:
        - name: relationTypeCategory
          in: query
          required: true
          schema:
            type: string
            enum:
              - INDIVIDUAL_INDIVIDUAL
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RelationTypeDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
  /households/listHouseholds:
    get:
      tags:
        - Households
      summary: List households
      operationId: listHousehold
      parameters:
        - name: householdId
          in: query
          required: false
          schema:
            type: string
        - name: accountId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListHouseHoldDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '415':
          description: Unsupported Media Type
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/APIMessage'
components:
  schemas:
    APIMessage:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
    Account:
      title: Account
      type: object
      properties:
        individualAccount:
          $ref: '#/components/schemas/IndividualAccount'
        companyAccount:
          $ref: '#/components/schemas/CompanyAccount'
    AccountContacts:
      title: AccountContacts
      type: object
      properties:
        accountId:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/Contact'
        pagination:
          $ref: '#/components/schemas/Pagination'
    AccountCustomFieldData:
      title: AccountCustomFieldData
      type: object
      properties:
        accountType:
          type: string
          enum:
            - Any
            - Individual
            - Company
    AccountDonationSearchResult:
      title: AccountDonationSearchResult
      type: object
      properties:
        donations:
          type: array
          items:
            $ref: '#/components/schemas/Donation'
        pagination:
          $ref: '#/components/schemas/Pagination'
    AccountIdAndRefIdResult:
      title: AccountIdAndRefIdResult
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
    AccountIdResult:
      title: AccountIdResult
      type: object
      properties:
        accountId:
          type: string
    AccountOrder:
      title: AccountOrder
      required:
        - accountId
        - orderDate
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/AccountOrderItem'
        orderDate:
          type: string
          format: date
        accountId:
          type: string
        totalCharge:
          type: number
          format: double
        subTotal:
          type: number
          format: double
          readOnly: true
        tax:
          type: number
          format: double
        totalDiscount:
          type: number
          format: double
        shippingHandlingFee:
          type: number
          format: double
        status:
          type: string
          readOnly: true
          enum:
            - Pending
            - Processing
            - Succeeded
            - Failed
            - Error
            - Scheduled
            - Canceled
            - Deferred
            - Refunded
            - Partially_Refunded
            - Dispute_Lost
            - Held_for_Review
        timestamps:
          $ref: '#/components/schemas/Timestamps'
    AccountOrderItem:
      title: AccountOrderItem
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - DONATION
            - MEMBERSHIP
            - EVENT_REGISTRATION
            - PRODUCT
        unitPrice:
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        price:
          type: number
          format: double
    AccountPledgeSearchResult:
      title: AccountPledgeSearchResult
      type: object
      properties:
        accountId:
          type: string
        pledges:
          type: array
          items:
            $ref: '#/components/schemas/Pledge'
        pagination:
          $ref: '#/components/schemas/Pagination'
    AccountRoleApi:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        color:
          $ref: '#/components/schemas/IdNamePair'
    AccountSearchResult:
      title: AccountSearchResult
      type: object
      properties:
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountSearchResultItem'
        pagination:
          $ref: '#/components/schemas/Pagination'
    AccountSearchResultItem:
      title: AccountSearchResultItem
      type: object
      properties:
        accountId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        companyName:
          type: string
        email:
          type: string
        userType:
          type: string
          enum:
            - INDIVIDUAL
            - COMPANY
    AccountWindfall:
      title: AccountWindfall
      type: object
      properties:
        id:
          type: string
        windfall_id:
          type: string
        net_worth:
          type: number
          format: double
        low_confidence_net_worth:
          type: number
          format: double
        high_confidence_net_worth:
          type: number
          format: double
        net_worth_last_calculated:
          type: string
        recent_mover:
          type: boolean
        recently_divorced:
          type: boolean
        recent_death_in_family:
          type: boolean
        political_affiliation:
          type: string
        political_donor:
          type: boolean
        boat_owner:
          type: boolean
        plane_owner:
          type: boolean
        small_business_owner:
          type: boolean
        philanthropic_giver:
          type: boolean
        philanthropic_cause:
          type: array
          items:
            type: string
        philanthropic_focus:
          type: array
          items:
            type: string
        multi-property_owner:
          type: boolean
        foundation_association:
          type: boolean
        foundation_officer:
          type: boolean
        trust_association:
          type: boolean
        nonprofit_board_member:
          type: boolean
        top_political_donor:
          type: boolean
        match_confidence:
          type: number
          format: double
        sec_money_in_motion:
          type: boolean
        liquidity_trigger:
          type: boolean
        luxury_car_owner:
          type: boolean
        imported_car_owner:
          type: boolean
        recent_mortgage:
          type: boolean
        primary_address_incorrect:
          type: boolean
    Acknowledgee:
      title: Acknowledgee
      type: object
      properties:
        accountId:
          type: string
        name:
          type: string
        email:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    Activity:
      title: Activity
      required:
        - activityDates
        - priority
        - status
        - subject
      type: object
      properties:
        id:
          type: string
        subject:
          type: string
        note:
          type: string
        activityDates:
          $ref: '#/components/schemas/ActivityDates'
        clientId:
          type: string
        systemUserId:
          type: string
        grantId:
          type: string
        status:
          $ref: '#/components/schemas/IdNamePair'
        priority:
          type: string
          enum:
            - High
            - Normal
            - Low
        timestamps:
          $ref: '#/components/schemas/Timestamps'
    ActivityDates:
      title: ActivityDates
      required:
        - startDate
        - timeZone
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        startTime:
          type: string
        endTime:
          type: string
        timeZone:
          $ref: '#/components/schemas/IdNamePair'
    Address:
      title: Address
      type: object
      properties:
        addressId:
          type: string
        isPrimaryAddress:
          type: boolean
        type:
          $ref: '#/components/schemas/IdNamePair'
        validAddress:
          type: boolean
        addressLine1:
          type: string
        startDate:
          type: string
        addressLine2:
          type: string
        endDate:
          type: string
        addressLine3:
          type: string
        addressLine4:
          type: string
        city:
          type: string
        stateProvince:
          $ref: '#/components/schemas/CodeNamePair'
        country:
          $ref: '#/components/schemas/IdNamePair'
        territory:
          type: string
        county:
          type: string
        zipCode:
          type: string
        zipCodeSuffix:
          type: string
        phone1:
          type: string
        phone1Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        phone2:
          type: string
        phone2Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        phone3:
          type: string
        phone3Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        fax:
          type: string
        faxType:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
    AddressAdd:
      title: AddressAdd
      type: object
      properties:
        accountId:
          type: string
        addressId:
          type: string
        isPrimaryAddress:
          type: boolean
        contactId:
          type: string
        type:
          $ref: '#/components/schemas/IdNamePair'
        validAddress:
          type: boolean
        addressLine1:
          type: string
        startDate:
          type: string
        addressLine2:
          type: string
        endDate:
          type: string
        addressLine3:
          type: string
        addressLine4:
          type: string
        city:
          type: string
        stateProvince:
          $ref: '#/components/schemas/CodeNamePair'
        country:
          $ref: '#/components/schemas/IdNamePair'
        territory:
          type: string
        county:
          type: string
        zipCode:
          type: string
        zipCodeSuffix:
          type: string
        phone1:
          type: string
        phone1Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        phone2:
          type: string
        phone2Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        phone3:
          type: string
        phone3Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        fax:
          type: string
        faxType:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
    AdmissionFee:
      title: AdmissionFee
      type: object
      properties:
        fee:
          type: number
          format: double
        taxDeductiblePercent:
          type: number
          format: double
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
    AssignmentVolunteers:
      title: AssignmentVolunteers
      required:
        - volunteers
      type: object
      properties:
        volunteers:
          type: array
          items:
            $ref: '#/components/schemas/ShiftAndVolunteer'
    AutoNumber:
      type: object
      properties:
        startingNumber:
          type: integer
          format: int32
        displayFormat:
          type: string
    BaseCustomFieldGroup:
      title: BaseCustomFieldGroup
      required:
        - displayName
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        description:
          type: string
    BaseMembership:
      title: BaseMembership
      type: object
      properties:
        id:
          type: string
        parentId:
          type: string
        accountId:
          type: string
        membershipLevel:
          $ref: '#/components/schemas/IdNamePair'
        membershipTerm:
          $ref: '#/components/schemas/IdNamePair'
        autoRenewal:
          type: boolean
        source:
          $ref: '#/components/schemas/IdNamePair'
        changeType:
          type: string
          readOnly: true
          enum:
            - UNCHANGED
            - UPGRADED
            - DOWNGRADED
        termUnit:
          type: string
          enum:
            - YEAR
            - MONTH
            - DAY
            - LIFE
            - WEEKLY
        termDuration:
          type: integer
          format: int32
        enrollType:
          type: string
          enum:
            - JOIN
            - RENEW
            - REJOIN
        transactionDate:
          type: string
          format: date-time
        termStartDate:
          type: string
          format: date-time
        termEndDate:
          type: string
          format: date-time
        fee:
          type: number
          format: double
        couponCode:
          type: string
        sendAcknowledgeEmail:
          type: boolean
        status:
          type: string
          enum:
            - SUCCEEDED
            - FAILED
            - PENDING
            - CANCELED
            - WAITINGLIST
            - CANCEL_PENDING
            - DEFERRED
            - REFUNDED
        complimentary:
          type: integer
          description: '1: Complimentary memberships because of donations made.<br>2:
            Complimentary memberships through the combination of past membership fees.<br>3:
            Complimentary memberships through the combination of donations made and
            previous membership fees.'
          format: int32
        membershipCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
        timestamps:
          $ref: '#/components/schemas/Timestamps'
        origin:
          "$ref": "#/components/schemas/Origin"
        sendAutoRenewalEnabledEmail:
          type: boolean
    BasicAttribute:
      type: object
      properties:
        defaultValue:
          type: string
        isRequired:
          type: boolean
    BillingAddress:
      title: BillingAddress
      type: object
      properties:
        addressLine1:
          type: string
        addressLine2:
          type: string
        city:
          type: string
        stateProvinceCode:
          type: string
        territory:
          type: string
        countryId:
          type: string
        zipCode:
          type: string
        zipCodeSuffix:
          type: string
        catalog:
          $ref: '#/components/schemas/Catalog'
        idNamePairs:
          type: array
          items:
            $ref: '#/components/schemas/IdNamePair'
    CalculateResult:
      title: CalculateResult
      type: object
      properties:
        totalCharge:
          type: number
          format: double
    Campaign:
      title: Campaign
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        fund:
          $ref: '#/components/schemas/IdNamePair'
        purpose:
          $ref: '#/components/schemas/IdNamePair'
        parentCampaign:
          $ref: '#/components/schemas/IdNamePair'
        pageContent:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - DELETED
        goal:
          type: number
          format: double
        campaignPageUrl:
          type: string
        donationFormUrl:
          type: string
        statistics:
          $ref: '#/components/schemas/CampaignStats'
        socialFundraising:
          $ref: '#/components/schemas/SocialFundraising'
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
    CampaignFundraiser:
      title: CampaignFundraiser
      type: object
      properties:
        accountId:
          type: string
        pageTitle:
          type: string
        goal:
          type: number
          format: double
    CampaignStats:
      title: CampaignStats
      type: object
      properties:
        donationCount:
          type: integer
          format: int32
        donationAmount:
          type: number
          format: double
        pledgeCount:
          type: integer
          format: int32
        pledgeAmount:
          type: number
          format: double
        eventRegistrationCount:
          type: integer
          format: int32
        eventRegistrationAmount:
          type: number
          format: double
        grandTotal:
          type: number
          format: double
    Catalog:
      title: Catalog
      type: object
      properties:
        displaySequence:
          type: integer
          format: int32
        id:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    Category:
      title: Category
      type: object
      properties:
        code:
          type: string
        id:
          type: string
        description:
          type: string
        name:
          type: string
        displaySequence:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    CheckboxSingle:
      type: object
      properties:
        isRequired:
          type: boolean
    CheckPayment:
      title: CheckPayment
      type: object
      properties:
        institution:
          type: string
        routingNumber:
          type: string
        accountNumber:
          type: string
        accountOwner:
          type: string
        checkNumber:
          type: string
        accountType:
          type: string
          enum:
            - Checking
            - Saving
    CodeNamePair:
      title: CodeNamePair
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    CompanyAccount:
      required:
        - name
      type: object
      properties:
        accountId:
          type: string
        noSolicitation:
          type: boolean
        login:
          $ref: '#/components/schemas/Login'
        url:
          maxLength: 80
          minLength: 0
          type: string
        timestamps:
          $ref: '#/components/schemas/Timestamps'
        consent:
          $ref: '#/components/schemas/Consent'
        accountCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        source:
          $ref: '#/components/schemas/IdNamePair'
        primaryContact:
          $ref: '#/components/schemas/Contact'
        sendSystemEmail:
          type: boolean
        email1OptOut:
          type: boolean
        origin:
          $ref: '#/components/schemas/Origin'
        accountCurrentMembershipStatus:
          type: string
          readOnly: true
        generosityIndicator:
          $ref: '#/components/schemas/GenerosityIndicator'
        sendTextOptIn:
          type: boolean
        smsNumber:
          type: string
        name:
          maxLength: 200
          minLength: 0
          type: string
        primaryContactAccountId:
          type: string
        companyTypes:
          type: array
          items:
            $ref: '#/components/schemas/IdNamePair'
        shippingAddresses:
          type: array
          items:
            $ref: '#/components/schemas/ShippingAddress'
    Consent:
      title: Consent
      type: object
      properties:
        email:
          type: string
          enum:
            - GIVEN
            - DECLINED
            - NOT_ASKED
        phone:
          type: string
          enum:
            - GIVEN
            - DECLINED
            - NOT_ASKED
        mail:
          type: string
          enum:
            - GIVEN
            - DECLINED
            - NOT_ASKED
        sms:
          type: string
          enum:
            - GIVEN
            - DECLINED
            - NOT_ASKED
        dataSharing:
          type: string
          enum:
            - GIVEN
            - DECLINED
            - NOT_ASKED
    Contact:
      title: Contact
      type: object
      properties:
        accountId:
          type: string
        contactId:
          type: string
        firstName:
          type: string
        middleName:
          type: string
        lastName:
          type: string
        prefix:
          type: string
        suffix:
          type: string
        salutation:
          type: string
        preferredName:
          type: string
        dob:
          $ref: '#/components/schemas/Dob'
        gender:
          $ref: '#/components/schemas/CodeNamePair'
        email1:
          type: string
        email2:
          type: string
        email3:
          type: string
        deceased:
          type: boolean
        department:
          type: string
        title:
          type: string
        primaryContact:
          type: boolean
        currentEmployer:
          type: boolean
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    CraInfo:
      title: CraInfo
      type: object
      properties:
        advantageAmount:
          type: number
          format: double
        eligibleAmount:
          type: number
          format: double
          readOnly: true
        advantageDescription:
          type: string
    CreateCustomObject:
      type: object
      properties:
        objectLabel:
          type: string
        objectDescription:
          type: string
        allowActivity:
          type: boolean
        allowReport:
          type: boolean
        addToNavigation:
          type: boolean
        createWebhook:
          type: string
        updateWebhook:
          type: string
        deleteWebhook:
          type: string
        objectRecordName:
          type: string
        objectRecordDataType:
          type: string
          enum:
            - AUTO_NUMBER
            - TEXT
        objectRecordStartNumber:
          type: integer
          format: int64
        objectRecordDisplayFormat:
          type: string
    CreditCardOfflinePayment:
      title: CreditCardOfflinePayment
      type: object
      properties:
        cardNumberLastFour:
          type: string
        expirationMonth:
          type: integer
          format: int32
        expirationYear:
          type: integer
          format: int32
        cardTypeCode:
          type: string
        cardHolderName:
          type: string
        cardHolderEmail:
          type: string
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
    CreditCardOnlinePayment:
      title: CreditCardOnlinePayment
      type: object
      properties:
        token:
          type: string
        cardNumberLastFour:
          type: string
          readOnly: true
        expirationMonth:
          type: integer
          format: int32
          readOnly: true
        expirationYear:
          type: integer
          format: int32
          readOnly: true
        cardTypeCode:
          type: string
          readOnly: true
        cardHolderName:
          type: string
          readOnly: true
        cardHolderEmail:
          type: string
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        transactionNumber:
          type: string
          readOnly: true
    CustomField:
      title: CustomField
      type: object
      properties:
        id:
          type: string
        value:
          type: string
        name:
          type: string
        optionValues:
          type: array
          items:
            $ref: '#/components/schemas/IdNamePair'
    CustomFieldData:
      type: object
      properties:
        id:
          maxLength: 20
          minLength: 0
          type: string
        name:
          maxLength: 255
          minLength: 0
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        displayName:
          type: string
        groupId:
          type: string
        displayType:
          type: string
          enum:
            - Checkbox
            - Dropdown
            - OneLineText
            - MultiLineText
            - Password
            - Radio
            - File
            - Account
        dataType:
          type: string
          enum:
            - Whole_Number
            - Decimal
            - Currency
            - Date
            - Time
            - Boolean
            - Text
            - Email
            - Phone
            - Area_Code
            - Name
            - Integer
            - Float
            - Amount
        constituentReadOnly:
          type: boolean
        component:
          type: string
          enum:
            - Account
            - Donation
            - Event
            - Attendee
            - Individual
            - Company
            - Activity
            - Membership
            - Product
            - Prospect
            - Grant
        optionValues:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldOption'
        accountSettings:
          $ref: '#/components/schemas/AccountCustomFieldData'
        eventSettings:
          $ref: '#/components/schemas/EventCustomFieldData'
        membershipSettings:
          $ref: '#/components/schemas/MemberShipCustomFieldData'
        productSettings:
          $ref: '#/components/schemas/ProductCustomFieldData'
    CustomFieldGroup:
      title: CustomFieldGroup
      required:
        - component
        - displayName
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        description:
          type: string
        component:
          type: string
          enum:
            - Account
            - Donation
            - Event
            - Attendee
            - Individual
            - Company
            - Activity
            - Membership
            - Product
            - Prospect
            - Grant
    CustomObjectEmailNotification:
      type: object
      properties:
        notificationType:
          type: string
          enum:
            - BACK_END
            - FRONT_END
            - API
        enable:
          type: boolean
    CustomObjectField:
      type: object
      properties:
        fieldLabel:
          type: string
        fieldDataType:
          type: string
          enum:
            - URL
            - CHECKBOX
            - TEXT
            - TEXTAREA
            - PERCENT
            - EMAIL
            - NUMBER
            - PHONE
            - DATE
            - DATETIME
            - DROPDOWN
            - RADIO
            - LOOKUP
            - MASTER_DETAIL
            - TEXTAREA_SHORT
            - CHECKBOX_SINGLE
            - AUTO_NUMBER
            - FORMULA
            - FILE
        fieldDescription:
          type: string
        fieldHelpText:
          type: string
        isInternal:
          type: boolean
        autoNumberAttribute:
          $ref: '#/components/schemas/AutoNumber'
        formulaAttribute:
          $ref: '#/components/schemas/Formula'
        masterDetailAttribute:
          $ref: '#/components/schemas/MasterDetail'
        lookupAttribute:
          $ref: '#/components/schemas/Lookup'
        textAttribute:
          $ref: '#/components/schemas/Text'
        numberAttribute:
          $ref: '#/components/schemas/Number'
        percentAttribute:
          $ref: '#/components/schemas/Percent'
        emailAttribute:
          $ref: '#/components/schemas/BasicAttribute'
        phoneAttribute:
          $ref: '#/components/schemas/BasicAttribute'
        urlAttribute:
          $ref: '#/components/schemas/BasicAttribute'
        textareaShortAttribute:
          $ref: '#/components/schemas/Textarea'
        textareaAttribute:
          $ref: '#/components/schemas/Textarea'
        dateAttribute:
          $ref: '#/components/schemas/Date'
        dateTimeAttribute:
          $ref: '#/components/schemas/Date'
        checkboxSingleAttribute:
          $ref: '#/components/schemas/CheckboxSingle'
        checkboxAttribute:
          $ref: '#/components/schemas/OptionsField'
        dropdownAttribute:
          $ref: '#/components/schemas/OptionsField'
        radioAttribute:
          $ref: '#/components/schemas/OptionsField'
        fileAttribute:
          $ref: '#/components/schemas/File'
    CustomObjectFieldListResponse:
      type: object
      properties:
        id:
          type: string
        fieldLabel:
          type: string
        apiName:
          type: string
        fieldDataType:
          type: string
          enum:
            - URL
            - CHECKBOX
            - TEXT
            - TEXTAREA
            - PERCENT
            - EMAIL
            - NUMBER
            - PHONE
            - DATE
            - DATETIME
            - DROPDOWN
            - RADIO
            - LOOKUP
            - MASTER_DETAIL
            - TEXTAREA_SHORT
            - CHECKBOX_SINGLE
            - AUTO_NUMBER
            - FORMULA
            - FILE
        fieldDescription:
          type: string
    CustomObjectFormLayout:
      type: object
      properties:
        layoutName:
          type: string
        isDefault:
          type: boolean
        formFields:
          $ref: '#/components/schemas/CustomObjectLayoutListField'
        childTables:
          $ref: '#/components/schemas/CustomObjectRelationList'
    CustomObjectFormLayoutEntryResponse:
      type: object
      properties:
        layoutName:
          type: string
        isDefault:
          type: boolean
        formFields:
          $ref: '#/components/schemas/CustomObjectLayoutListField'
        childTables:
          $ref: '#/components/schemas/CustomObjectRelationList'
        objectApiName:
          type: string
        layoutId:
          type: string
    CustomObjectFormLayoutResponse:
      type: object
      properties:
        layoutName:
          type: string
        isDefault:
          type: boolean
        formFields:
          $ref: '#/components/schemas/CustomObjectLayoutListField'
        childTables:
          $ref: '#/components/schemas/CustomObjectRelationList'
        objectApiName:
          type: string
    CustomObjectFieldResponse:
      type: object
      properties:
        id:
          type: string
        fieldLabel:
          type: string
        apiName:
          type: string
        fieldDataType:
          type: string
          enum:
            - URL
            - CHECKBOX
            - TEXT
            - TEXTAREA
            - PERCENT
            - EMAIL
            - NUMBER
            - PHONE
            - DATE
            - DATETIME
            - DROPDOWN
            - RADIO
            - LOOKUP
            - MASTER_DETAIL
            - TEXTAREA_SHORT
            - CHECKBOX_SINGLE
            - AUTO_NUMBER
            - FORMULA
            - FILE
        fieldDescription:
          type: string
        fieldHelpText:
          type: string
        isInternal:
          type: boolean
        attribute:
          $ref: '#/components/schemas/FieldAttribute'
    CustomObjectLayoutListField:
      type: object
      properties:
        layoutField:
          type: array
          items:
            $ref: '#/components/schemas/LayoutField'
    CustomObjectLayoutPageItem:
      type: object
      properties:
        layoutId:
          type: integer
          format: int64
        layoutName:
          type: string
        lastModifiedDateTime:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        isDefault:
          type: boolean
    CustomObjectListLayout:
      type: object
      properties:
        layoutName:
          type: string
        isDefault:
          type: boolean
        searchCriteriaFields:
          $ref: '#/components/schemas/CustomObjectLayoutListField'
        listFields:
          $ref: '#/components/schemas/CustomObjectLayoutListField'
    CustomObjectListLayoutEntryResponse:
      type: object
      properties:
        layoutName:
          type: string
        isDefault:
          type: boolean
        searchCriteriaFields:
          $ref: '#/components/schemas/CustomObjectLayoutListField'
        listFields:
          $ref: '#/components/schemas/CustomObjectLayoutListField'
        objectApiName:
          type: string
        layoutId:
          type: string
    CustomObjectListLayoutResponse:
      type: object
      properties:
        layoutName:
          type: string
        isDefault:
          type: boolean
        searchCriteriaFields:
          $ref: '#/components/schemas/CustomObjectLayoutListField'
        listFields:
          $ref: '#/components/schemas/CustomObjectLayoutListField'
        objectApiName:
          type: string
    CustomObjectPageParam:
      type: object
      properties:
        currentPage:
          minimum: 0
          type: integer
          description: 'Default value : 0'
          format: int32
        pageSize:
          maximum: 200
          minimum: 1
          type: integer
          description: 'Default value : 20'
          format: int32
        sortColumn:
          type: string
        sortDirection:
          type: string
          enum:
            - ASC
            - DESC
    CustomObjectRecord:
      type: object
      properties:
        nameValuePair:
          type: array
          items:
            $ref: '#/components/schemas/RecordData'
    CustomObjectRelation:
      type: object
      properties:
        objectApiName:
          type: string
        objectLabel:
          type: string
        relationId:
          type: integer
          format: int64
        relateListLabel:
          type: string
    CustomObjectRelationList:
      type: object
      properties:
        customObjectRelation:
          type: array
          items:
            $ref: '#/components/schemas/CustomObjectRelation'
    CustomObjectRelationListResponse:
      type: object
      properties:
        customObjectRelation:
          type: array
          items:
            $ref: '#/components/schemas/CustomObjectRelation'
    CustomObjectResponse:
      type: object
      properties:
        objectId:
          type: integer
          format: int64
        objectName:
          type: string
        objectLabel:
          type: string
        objectDescription:
          type: string
        objectApiName:
          type: string
        objectRecordName:
          type: string
        objectRecordDataType:
          type: string
        objectRecordDataLength:
          type: integer
          format: int32
        objectRecordStartingNumber:
          type: string
        objectRecordDisplayFormat:
          type: string
        addToNavigation:
          type: boolean
        allowActivity:
          type: boolean
        allowReport:
          type: boolean
        isActive:
          type: boolean
        createWebhook:
          type: string
        updateWebhook:
          type: string
        deleteWebhook:
          type: string
        timestamps:
          $ref: '#/components/schemas/Timestamps'
    CustomObjectStatus:
      type: object
      properties:
        isActive:
          type: boolean
    CustomObjectValidatorRule:
      type: object
      properties:
        validatorName:
          type: string
        errorMessage:
          type: string
        description:
          type: string
        validatorExpression:
          type: string
        isActive:
          type: boolean
    CustomObjectValidatorRuleResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        validatorName:
          type: string
        errorMessage:
          type: string
        description:
          type: string
        validatorExpression:
          type: string
        isActive:
          type: boolean
    CustomFieldOption:
      title: CustomFieldOption
      type: object
      properties:
        id:
          maxLength: 20
          minLength: 0
          type: string
        name:
          maxLength: 255
          minLength: 0
          type: string
        visibleOnPublicForms:
          type: boolean
        visibleOnConstituentForms:
          type: boolean
    DafPayPayment:
      type: object
      properties:
        distributionId:
          type: string
        daf:
          type: string
      readOnly: true
    Date:
      type: object
      properties:
        defaultValue:
          type: string
        isRequired:
          type: boolean
        displayFormat:
          type: string
    DiscountItem:
      title: DiscountItem
      type: object
      properties:
        orderItemId:
          type: string
        orderItemName:
          type: string
        orderItemType:
          type: string
          enum:
            - DONATION
            - MEMBERSHIP
            - EVENT_REGISTRATION
            - PRODUCT
        discountId:
          type: string
        discountName:
          type: string
        discount:
          type: number
          format: double
    Dob:
      title: Dob
      type: object
      properties:
        day:
          type: string
        month:
          type: string
        year:
          type: string
    GenerosityIndicator:
      type: object
      properties:
        indicator:
          type: number
          format: double
        affinity:
          type: integer
          format: int32
        recency:
          type: integer
          format: int32
        frequency:
          type: integer
          format: int32
        monetaryValue:
          type: integer
          format: int32
      readOnly: true
    Donation:
      title: Donation
      type: object
      properties:
        batchNumber:
          type: string
        donorName:
          type: string
        id:
          type: string
        accountId:
          type: string
        date:
          type: string
          format: date-time
        sendAcknowledgeEmail:
          type: boolean
        amount:
          type: number
          format: double
        anonymousType:
          type: string
          enum:
            - No
            - DonorNameAnonymous
            - DonationAmountAnonymous
        sendAcknowledgeLetter:
          type: boolean
        donorCoveredFeeFlag:
          type: boolean
        purpose:
          $ref: '#/components/schemas/IdNamePair'
        source:
          $ref: '#/components/schemas/IdNamePair'
        campaign:
          $ref: '#/components/schemas/IdNamePair'
        donorCoveredFee:
          type: number
          format: double
        solicitationMethod:
          $ref: '#/components/schemas/IdNamePair'
        acknowledgee:
          $ref: '#/components/schemas/Acknowledgee'
        fund:
          $ref: '#/components/schemas/IdNamePair'
        payLater:
          type: boolean
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        timestamps:
          $ref: '#/components/schemas/Timestamps'
        tribute:
          $ref: '#/components/schemas/Tribute'
        donationCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        solicitor:
          $ref: '#/components/schemas/Solicitor'
        fundraiserAccountId:
          type: string
        status:
          type: string
          readOnly: true
          enum:
            - Pending
            - Succeeded
            - Failed
            - Canceled
            - Deferred
            - Refunded
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
        origin:
          $ref: '#/components/schemas/Origin'
    AddPaymentRequest:
      required:
        - transactionId
        - transactionType
      type: object
      properties:
        transactionId:
          type: string
        transactionType:
          type: string
          enum:
            - ORDER
            - DONATION
            - MEMBERSHIP
            - EVENT_REGISTRATION
        payment:
          $ref: '#/components/schemas/Payment'
    DonationItem:
      title: DonationItem
      type: object
      properties:
        donorName:
          type: string
        id:
          type: string
        sendAcknowledgeEmail:
          type: boolean
        accountId:
          type: string
        batchNumber:
          type: string
        date:
          type: string
          format: date-time
        amount:
          type: number
          format: double
        anonymousType:
          type: string
          enum:
            - No
            - DonorNameAnonymous
            - DonationAmountAnonymous
        status:
          type: string
          readOnly: true
          enum:
            - Pending
            - Succeeded
            - Failed
            - Canceled
            - Deferred
            - Refunded
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
        origin:
          $ref: '#/components/schemas/Origin'
        purpose:
          $ref: '#/components/schemas/IdNamePair'
        source:
          $ref: '#/components/schemas/IdNamePair'
        campaign:
          $ref: '#/components/schemas/IdNamePair'
        solicitationMethod:
          $ref: '#/components/schemas/IdNamePair'
        acknowledgee:
          $ref: '#/components/schemas/Acknowledgee'
        fund:
          $ref: '#/components/schemas/IdNamePair'
        timestamps:
          $ref: '#/components/schemas/Timestamps'
        tribute:
          $ref: '#/components/schemas/Tribute'
        donationCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        solicitor:
          $ref: '#/components/schemas/Solicitor'
        fundraiserAccountId:
          type: string
    DonationResponse:
      title: DonationResponse
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
        status:
          type: string
          enum:
            - Pending
            - Succeeded
            - Failed
            - Canceled
            - Deferred
            - Refunded
        paymentResponse:
          $ref: '#/components/schemas/PaymentResponse'
    DonorCoveredFees:
      title: DonorCoveredFees
      type: object
      properties:
        creditCardFee:
          type: number
          format: double
        creditCardAmExFee:
          type: number
          format: double
        creditCardMasterCardFee:
          type: number
          format: double
        achFee:
          type: number
          format: double
    DynaRecurringDonation:
      title: DynaRecurringDonation
      type: object
      properties:
        id:
          type: integer
          format: int64
        accountId:
          type: string
        donorName:
          type: string
        amount:
          type: number
          format: double
        frequency:
          type: string
        nextDate:
          type: string
    ECheckPayment:
      title: ECheckPayment
      type: object
      properties:
        token:
          type: string
        plaidAccountId:
          type: string
        institution:
          type: string
        routingNumber:
          type: string
        accountNumber:
          type: string
        accountOwner:
          type: string
        checkNumber:
          type: string
        accountType:
          type: string
          enum:
            - Checking
            - Saving
        transactionNumber:
          type: string
          readOnly: true
        accountHolderEmail:
          type: string
    EditCustomObjectField:
      type: object
      properties:
        fieldLabel:
          type: string
        fieldDescription:
          type: string
        fieldHelpText:
          type: string
        isInternal:
          type: boolean
        autoNumberAttribute:
          $ref: '#/components/schemas/AutoNumber'
        formulaAttribute:
          $ref: '#/components/schemas/Formula'
        masterDetailAttribute:
          $ref: '#/components/schemas/MasterDetail'
        lookupAttribute:
          $ref: '#/components/schemas/Lookup'
        textAttribute:
          $ref: '#/components/schemas/Text'
        numberAttribute:
          $ref: '#/components/schemas/Number'
        percentAttribute:
          $ref: '#/components/schemas/Percent'
        emailAttribute:
          $ref: '#/components/schemas/BasicAttribute'
        phoneAttribute:
          $ref: '#/components/schemas/BasicAttribute'
        urlAttribute:
          $ref: '#/components/schemas/BasicAttribute'
        textareaShortAttribute:
          $ref: '#/components/schemas/Textarea'
        textareaAttribute:
          $ref: '#/components/schemas/Textarea'
        dateAttribute:
          $ref: '#/components/schemas/Date'
        dateTimeAttribute:
          $ref: '#/components/schemas/Date'
        checkboxSingleAttribute:
          $ref: '#/components/schemas/CheckboxSingle'
        checkboxAttribute:
          $ref: '#/components/schemas/OptionsField'
        dropdownAttribute:
          $ref: '#/components/schemas/OptionsField'
        radioAttribute:
          $ref: '#/components/schemas/OptionsField'
        fileAttribute:
          $ref: '#/components/schemas/File'
    Event:
      title: Event
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        summary:
          type: string
        code:
          type: string
        maximumAttendees:
          type: integer
          format: int32
        category:
          $ref: '#/components/schemas/IdNamePair'
        topic:
          $ref: '#/components/schemas/IdNamePair'
        campaign:
          $ref: '#/components/schemas/IdNamePair'
        publishEvent:
          type: boolean
        enableEventRegistrationForm:
          type: boolean
        archived:
          type: boolean
        enableWaitListing:
          type: boolean
        createAccountsforAttendees:
          type: boolean
        eventDescription:
          type: string
        eventDates:
          $ref: '#/components/schemas/EventDates'
        financialSettings:
          $ref: '#/components/schemas/FinancialSettings'
        location:
          $ref: '#/components/schemas/Location'
        thumbnailUrl:
          type: string
    EventAttendee:
      title: EventAttendee
      type: object
      properties:
        attendeeId:
          type: integer
          format: int32
        accountId:
          type: string
        prefix:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        markedAttended:
          type: boolean
        attendeeCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        registrantAccountId:
          type: string
        registrationStatus:
          type: string
          enum:
            - SUCCEEDED
            - FAILED
            - PENDING
            - CANCELED
            - WAITINGLIST
            - CANCEL_PENDING
            - DEFERRED
            - REFUNDED
        registrationDate:
          type: string
          format: date-time
        email:
          type: string
        companyName:
          type: string
        addressLine1:
          type: string
        city:
          type: string
        stateProvince:
          type: string
        zipCode:
          type: string
        phone1:
          type: string
        phone1Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        dob:
          $ref: '#/components/schemas/Dob'
        eventName:
          type: string
        registrationId:
          type: string
        ticketName:
          type: string
    EventAttendees:
      title: EventAttendees
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/EventAttendee'
    EventCustomFieldData:
      title: EventCustomFieldData
      type: object
      properties:
        isEventSpecificField:
          type: boolean
        eventId:
          type: string
        attendeeQuestion:
          type: boolean
        constituentRequired:
          type: boolean
        publicRequired:
          type: boolean
        constituentVisible:
          type: boolean
        publicVisible:
          type: boolean
    EventDates:
      title: EventDates
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        startTime:
          type: string
        endTime:
          type: string
        registrationOpenDate:
          type: string
          format: date-time
        registrationCloseDate:
          type: string
          format: date-time
        timeZone:
          $ref: '#/components/schemas/IdNamePair'
    EventRegistration:
      required:
        - eventId
        - registrantAccountId
      type: object
      properties:
        id:
          type: string
        eventId:
          type: string
        registrationDateTime:
          type: string
          example: '2020-03-26T02:46:00Z'
        couponCode:
          maxLength: 20
          minLength: 0
          type: string
        sendSystemEmail:
          type: boolean
        registrationAmount:
          minimum: 0
          type: number
          format: double
        ignoreCapacity:
          type: boolean
        registrantAccountId:
          type: string
        fundraiserAccountId:
          type: string
        registrantCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
        source:
          $ref: '#/components/schemas/IdNamePair'
        origin:
          $ref: '#/components/schemas/Origin'
        totalCharge:
          type: number
          format: double
        totalDiscount:
          type: number
          format: double
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        donorCoveredFeeFlag:
          type: boolean
        donorCoveredFee:
          type: number
          format: double
        payLater:
          type: boolean
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/DiscountItem'
    EventRegistrationItem:
      title: EventRegistrationItem
      type: object
      properties:
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
        id:
          type: string
        eventId:
          type: string
        registrationDateTime:
          type: string
          example: 2020-03-26T02:46:00Z
        couponCode:
          type: string
        sendSystemEmail:
          type: boolean
        registrationAmount:
          type: number
          format: double
        ignoreCapacity:
          type: boolean
        registrantAccountId:
          type: string
        fundraiserAccountId:
          type: string
        registrantCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        tickets:
          type: array
          items:
            $ref: '#/components/schemas/Ticket'
        source:
          $ref: '#/components/schemas/IdNamePair'
    EventRegistrationResponse:
      title: EventRegistrationResponse
      type: object
      properties:
        id:
          type: integer
          format: int32
        accountId:
          type: string
        status:
          type: string
          enum:
            - SUCCEEDED
            - FAILED
            - PENDING
            - CANCELED
            - WAITINGLIST
            - CANCEL_PENDING
            - DEFERRED
            - REFUNDED
        paymentResponse:
          $ref: '#/components/schemas/PaymentResponse'
    EventSearchResult:
      title: EventSearchResult
      type: object
      properties:
        events:
          type: array
          items:
            $ref: '#/components/schemas/EventSearchResultItem'
        pagination:
          $ref: '#/components/schemas/Pagination'
    EventSearchResultItem:
      title: EventSearchResultItem
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        code:
          type: string
        capacity:
          type: integer
          format: int32
        archived:
          type: boolean
        description:
          type: string
        startDate:
          type: string
          format: date-time
        startTime:
          type: string
        endDate:
          type: string
          format: date-time
        endTime:
          type: string
        publishEvent:
          type: boolean
        enableEventRegistrationForm:
          type: boolean
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        addressLine4:
          type: string
        addressType:
          type: string
        addressCity:
          type: string
        addressZipCode:
          type: string
        addressZipCodeSuffix:
          type: string
        addressCountry:
          type: string
        campaignCode:
          type: string
        campaignName:
          type: string
        fundCode:
          type: string
        fundName:
          type: string
        purposeCode:
          type: string
        purposeName:
          type: string
        thumbnailUrl:
          type: string
    EventTicket:
      title: EventTicket
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        fee:
          type: number
          format: double
        maxNumberAvailable:
          type: integer
          format: int32
        numberRemaining:
          type: integer
          format: int32
        attendeesPerTicketType:
          type: string
          enum:
            - Up_to
            - Exactly
        attendeesPerTicketNumber:
          type: integer
          format: int32
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
    FieldAttribute:
      type: object
    FieldOptionValue:
      type: object
      properties:
        optionId:
          type: integer
          format: int64
        optionValue:
          type: string
        sequence:
          type: integer
          format: int64
        isActive:
          type: boolean
        isDefault:
          type: boolean
    File:
      type: object
      properties:
        isRequired:
          type: boolean
        maxFileSize:
          type: integer
          format: int64
        allowFileTypes:
          type: string
        availableToPublic:
          type: boolean
    FilterCriteria:
      type: object
      properties:
        criteriaField:
          type: string
        operator:
          type: string
        type:
          type: string
        searchField:
          type: string
        searchValue:
          type: string
        groupId:
          type: string
    FinancialSettings:
      title: FinancialSettings
      type: object
      properties:
        feeType:
          type: string
          enum:
            - Free
            - SingleFee
            - MT_OA
            - MT_MA
        admissionFee:
          $ref: '#/components/schemas/AdmissionFee'
        ticketsPerRegistration:
          $ref: '#/components/schemas/TicketsPerRegistration'
        fund:
          $ref: '#/components/schemas/IdNamePair'
        taxDeductiblePortion:
          $ref: '#/components/schemas/TaxDeductiblePortion'
        donations:
          $ref: '#/components/schemas/FinancialSettingsDonations'
    FinancialSettingsDonations:
      title: FinancialSettingsDonations
      type: object
      properties:
        type:
          type: string
          enum:
            - None
            - FreeInput
            - LEVEL
        label:
          type: string
    Formula:
      type: object
      properties:
        returnDataType:
          type: string
          enum:
            - BOOLEAN
            - NUMBER
            - TEXT
            - PERCENT
            - DATETIME
            - DATE
        returnDataDecimalLength:
          type: integer
          format: int64
        emptyFieldTreatAs:
          type: string
          enum:
            - ZEROS
            - BLANK
        formulaExpression:
          type: string
    Grant:
      title: Grant
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
        status:
          $ref: '#/components/schemas/IdNamePair'
        systemUserId:
          type: string
        grantName:
          type: string
        dueDate:
          type: string
          format: date-time
        closeDate:
          type: string
          format: date-time
        askAmount:
          type: number
          format: double
        fundedDate:
          type: string
          format: date-time
        fundedAmount:
          type: number
          format: double
        note:
          type: string
        campaign:
          $ref: '#/components/schemas/IdNamePair'
        fund:
          $ref: '#/components/schemas/IdNamePair'
        purpose:
          $ref: '#/components/schemas/IdNamePair'
        grantCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        linkedTransactionId:
          type: string
        createdBy:
          type: string
          readOnly: true
        createdDate:
          type: string
          format: date-time
          readOnly: true
        lastModifiedBy:
          type: string
          readOnly: true
        lastModifiedDate:
          type: string
          format: date-time
          readOnly: true
        parentGrantId:
          type: string
          readOnly: true
        committedDate:
          type: string
          format: date-time
        committedAmount:
          type: number
          format: double
    GenderVO:
      title: GenderVO
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        position:
          type: integer
          format: int32
    GroupVolunteerSearchParam:
      title: GroupVolunteerSearchParam
      type: object
      properties:
        pageSize:
          maximum: 200
          minimum: 1
          type: integer
          format: int32
        currentPage:
          minimum: 0
          type: integer
          format: int32
        opportunityIds:
          type: array
          items:
            type: string
        shiftIds:
          type: array
          items:
            type: string
        roleIds:
          type: array
          items:
            type: string
    HouseHoldContactDto:
      required:
        - accountId
        - relationType
      type: object
      properties:
        accountId:
          type: string
        relationType:
          $ref: '#/components/schemas/IdNamePair'
        isPrimaryHouseHoldContact:
          type: boolean
          default: false
        confirmDelete:
          type: boolean
          description: >-
            This field is only applicable to the update household interface and
            will be ignored by the create household interface.
          default: false
    HouseHoldDto:
      required:
        - contacts
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        salutation:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/HouseHoldContactDto'
    HttpBasic:
      title: HttpBasic
      type: object
      properties:
        userName:
          type: string
        password:
          type: string
    IdCodeNameTriple:
      title: IdCodeNameTriple
      type: object
      properties:
        code:
          type: string
        id:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    IdCodeNameTriple2:
      title: IdCodeNameTriple2
      type: object
      properties:
        code:
          type: string
        id:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        isDefault:
          type: boolean
    IdNamePair:
      title: IdNamePair
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    IdResult:
      title: IdResult
      type: object
      properties:
        id:
          type: string
    InKindPayment:
      title: InKindPayment
      type: object
      properties:
        fairMarketValue:
          type: number
          format: double
        nccDescription:
          type: string
    IndividualAccount:
      type: object
      properties:
        accountId:
          type: string
        noSolicitation:
          type: boolean
        login:
          $ref: '#/components/schemas/Login'
        url:
          maxLength: 80
          minLength: 0
          type: string
        timestamps:
          $ref: '#/components/schemas/Timestamps'
        consent:
          $ref: '#/components/schemas/Consent'
        accountCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        source:
          $ref: '#/components/schemas/IdNamePair'
        primaryContact:
          $ref: '#/components/schemas/Contact'
        sendSystemEmail:
          type: boolean
        email1OptOut:
          type: boolean
        origin:
          $ref: '#/components/schemas/Origin'
        accountCurrentMembershipStatus:
          type: string
          readOnly: true
        generosityIndicator:
          $ref: '#/components/schemas/GenerosityIndicator'
        sendTextOptIn:
          type: boolean
        smsNumber:
          type: string
        company:
          $ref: '#/components/schemas/IdNamePair'
        facebookPage:
          maxLength: 255
          minLength: 0
          type: string
        twitterPage:
          maxLength: 255
          minLength: 0
          type: string
        individualTypes:
          type: array
          items:
            $ref: '#/components/schemas/IdNamePair'
        roleVoList:
          type: array
          items:
            $ref: '#/components/schemas/AccountRoleApi'
    IndividualToCompany:
      title: IndividualToCompany
      type: object
      properties:
        individualContactId:
          type: string
        companyAccountId:
          type: string
    Installment:
      title: Installment
      required:
        - amount
        - expectedDate
      type: object
      properties:
        id:
          type: string
        expectedDate:
          type: string
          description: 'Example: 2021-01-20'
        amount:
          type: number
          format: double
        pledgeId:
          type: string
        pledgePaymentIds:
          type: array
          items:
            type: string
    LayoutField:
      type: object
      properties:
        objectApiName:
          type: string
        fieldApiName:
          type: string
    LinkIndividualToCompany:
      title: LinkIndividualToCompany
      type: object
      properties:
        individualContactId:
          type: string
        isPrimaryContact:
          type: boolean
        companyAccountId:
          type: string
        isCurrentEmployee:
          type: boolean
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        address:
          $ref: '#/components/schemas/Address'
        department:
          type: string
        title:
          type: string
        companyEmail:
          type: string
    ListHouseHoldContactDto:
      required:
        - accountId
        - isPrimaryHouseHoldContact
        - relationType
      type: object
      properties:
        accountId:
          type: string
        relationType:
          $ref: '#/components/schemas/RelationTypeDto'
        isPrimaryHouseHoldContact:
          type: boolean
    ListHouseHoldDto:
      required:
        - contacts
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        salutation:
          type: string
        contacts:
          type: array
          items:
            $ref: '#/components/schemas/ListHouseHoldContactDto'
    ListObjectsResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ObjectIdName'
    ListRecordResponse:
      type: object
      properties:
        recordData:
          type: array
          items:
            $ref: '#/components/schemas/NameValuePair'
    Location:
      title: Location
      type: object
      properties:
        name:
          type: string
        roomNumber:
          type: string
        buildingNumber:
          type: string
        address:
          type: string
        city:
          type: string
        stateProvince:
          $ref: '#/components/schemas/CodeNamePair'
        country:
          $ref: '#/components/schemas/IdNamePair'
        zipCode:
          type: string
        zipCodeSuffix:
          type: string
    Login:
      title: Login
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Lookup:
      type: object
      properties:
        relatedObjectApiName:
          type: string
        reparentAllow:
          type: boolean
        relationFilter:
          $ref: '#/components/schemas/RelationFilter'
        addSystemRelatedList:
          type: boolean
        relatedListLabel:
          type: string
    MasterDetail:
      type: object
      properties:
        relatedObjectApiName:
          type: string
        reparentAllow:
          type: boolean
        relationFilter:
          $ref: '#/components/schemas/RelationFilter'
        addSystemRelatedList:
          type: boolean
        relatedListLabel:
          type: string
        deleteAction:
          type: string
          enum:
            - CASCADE
            - BLOCK
    Membership:
      type: object
      properties:
        id:
          type: string
        parentId:
          type: string
        accountId:
          type: string
        membershipLevel:
          $ref: '#/components/schemas/IdNamePair'
        membershipTerm:
          $ref: '#/components/schemas/IdNamePair'
        autoRenewal:
          type: boolean
        source:
          $ref: '#/components/schemas/IdNamePair'
        changeType:
          type: string
          readOnly: true
          enum:
            - UNCHANGED
            - UPGRADED
            - DOWNGRADED
        termUnit:
          type: string
          enum:
            - YEAR
            - MONTH
            - DAY
            - LIFE
            - WEEKLY
        termDuration:
          type: integer
          format: int32
        enrollType:
          type: string
          enum:
            - JOIN
            - RENEW
            - REJOIN
        transactionDate:
          type: string
          format: date-time
        termStartDate:
          type: string
          format: date-time
        termEndDate:
          type: string
          format: date-time
        fee:
          type: number
          format: double
        sendAcknowledgeEmail:
          type: boolean
        status:
          type: string
          enum:
            - SUCCEEDED
            - FAILED
            - PENDING
            - CANCELED
            - WAITINGLIST
            - CANCEL_PENDING
            - DEFERRED
            - REFUNDED
        complimentary:
          type: integer
          description: >-
            1: Complimentary memberships because of donations made.<br>2:
            Complimentary memberships through the combination of past membership
            fees.<br>3: Complimentary memberships through the combination of
            donations made and previous membership fees.
          format: int32
        membershipCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
        timestamps:
          $ref: '#/components/schemas/Timestamps'
        origin:
          $ref: '#/components/schemas/Origin'
        sendAutoRenewalEnabledEmail:
          type: boolean
        subMembers:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/SubMembership'
        payLater:
          type: boolean
          writeOnly: true
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        donorCoveredFeeFlag:
          type: boolean
        donorCoveredFee:
          type: number
          format: double
        totalCharge:
          type: number
          format: double
        totalDiscount:
          type: number
          format: double
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/DiscountItem'
    MembershipAutoRenewal:
      type: object
      properties:
        membershipId:
          type: string
        autoRenewal:
          type: boolean
        creditCardOnline:
          $ref: '#/components/schemas/CreditCardOnlinePayment'
        ach:
          $ref: '#/components/schemas/ECheckPayment'
        donorCoveredFeeFlag:
          type: boolean
        sendAutoRenewalEnabledEmail:
          type: boolean
    MembershipCalculateDatesResult:
      title: MembershipCalculateDatesResult
      type: object
      properties:
        transactionDate:
          type: string
          format: date-time
        termStartDate:
          type: string
          format: date-time
        termEndDate:
          type: string
          format: date-time
    MembershipCalculateResult:
      title: MembershipCalculateResult
      type: object
      properties:
        subTotal:
          type: number
          format: double
        totalDiscount:
          type: number
          format: double
        totalCharge:
          type: number
          format: double
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/DiscountItem'
    MemberShipCustomFieldData:
      title: MemberShipCustomFieldData
      type: object
      properties:
        membershipLevels:
          type: array
          items:
            $ref: '#/components/schemas/MembershipLevelId'
    MembershipItem:
      title: MembershipItem
      type: object
      properties:
        id:
          type: string
        subMembers:
          type: array
          items:
            $ref: '#/components/schemas/SubMembership'
        parentId:
          type: string
        accountId:
          type: string
        membershipLevel:
          $ref: '#/components/schemas/IdNamePair'
        membershipTerm:
          $ref: '#/components/schemas/IdNamePair'
        autoRenewal:
          type: boolean
        source:
          $ref: '#/components/schemas/IdNamePair'
        changeType:
          type: string
          readOnly: true
          enum:
            - UNCHANGED
            - UPGRADED
            - DOWNGRADED
        termUnit:
          type: string
          enum:
            - YEAR
            - MONTH
            - DAY
            - LIFE
            - WEEKLY
        termDuration:
          type: integer
          format: int32
        enrollType:
          type: string
          enum:
            - JOIN
            - RENEW
            - REJOIN
        transactionDate:
          type: string
          format: date-time
        termStartDate:
          type: string
          format: date-time
        termEndDate:
          type: string
          format: date-time
        fee:
          type: number
          format: double
        couponCode:
          type: string
        sendAcknowledgeEmail:
          type: boolean
        status:
          type: string
          enum:
            - SUCCEEDED
            - FAILED
            - PENDING
            - CANCELED
            - WAITINGLIST
            - CANCEL_PENDING
            - DEFERRED
            - REFUNDED
        complimentary:
          type: integer
          description: '1: Complimentary memberships because of donations made.<br>2:
            Complimentary memberships through the combination of past membership fees.<br>3:
            Complimentary memberships through the combination of donations made and
            previous membership fees.'
          format: int32
        membershipCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
        timestamps:
          $ref: '#/components/schemas/Timestamps'
        origin:
          $ref: '#/components/schemas/Origin'
        sendAutoRenewalEnabledEmail:
          type: boolean
    MembershipLevel:
      title: MembershipLevel
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
        code:
          type: string
        rank:
          type: integer
          format: int32
        type:
          type: string
          enum:
            - NO_GROUP
            - COMPANY
            - HOUSEHOLD
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        forceAutoRenewal:
          type: boolean
        childMemberAllowed:
          type: integer
          format: int32
        scopeType:
          type: string
          enum:
            - CURRENT_EMPLOYEES
            - ALL_CONTACTS
    MembershipLevelId:
      title: MembershipLevelId
      type: object
      properties:
        id:
          type: string
    MembershipLevelsResponse:
      title: MembershipLevelsResponse
      type: object
      properties:
        membershipLevels:
          type: array
          items:
            $ref: '#/components/schemas/MembershipLevel'
        pagination:
          $ref: '#/components/schemas/Pagination'
    MembershipListResponse:
      title: MembershipListResponse
      type: object
      properties:
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/Membership'
        pagination:
          $ref: '#/components/schemas/Pagination'
    MembershipResponse:
      title: MembershipResponse
      type: object
      properties:
        id:
          type: string
        subMembershipResponses:
          type: array
          items:
            $ref: '#/components/schemas/SubMembershipResponse'
        accountId:
          type: string
        paymentResponse:
          $ref: '#/components/schemas/PaymentResponse'
        membershipLevel:
          $ref: '#/components/schemas/IdNamePair'
        membershipTerm:
          $ref: '#/components/schemas/IdNamePair'
        status:
          type: string
          enum:
            - SUCCEEDED
            - FAILED
            - PENDING
            - CANCELED
            - WAITINGLIST
            - CANCEL_PENDING
            - DEFERRED
            - REFUNDED
    MembershipTerm:
      title: MembershipTerm
      type: object
      properties:
        id:
          type: integer
          format: int32
        membershipLevel:
          $ref: '#/components/schemas/IdNamePair'
        display:
          type: string
        type:
          type: string
          enum:
            - JOIN
            - RENEW
        duration:
          type: integer
          format: int32
        unit:
          type: string
          enum:
            - YEAR
            - MONTH
            - DAY
            - LIFE
            - WEEKLY
        fee:
          type: number
          format: double
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
        childTerms:
          type: array
          items:
            $ref: '#/components/schemas/MembershipTerm'
    MembershipTermsResponse:
      title: MembershipTermsResponse
      type: object
      properties:
        membershipTerms:
          type: array
          items:
            $ref: '#/components/schemas/MembershipTerm'
        pagination:
          $ref: '#/components/schemas/Pagination'
    MoveToGroup:
      title: MoveToGroup
      type: object
      properties:
        groupId:
          type: string
        customFields:
          type: array
          items:
            type: string
    NameValuePair:
      title: NameValuePair
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    NeonPaySetting:
      title: NeonPaySetting
      type: object
      properties:
        merchantId:
          type: string
        publicKey:
          type: string
    Number:
      type: object
      properties:
        defaultValue:
          type: string
        isRequired:
          type: boolean
        length:
          type: integer
          format: int64
        decimalLength:
          type: integer
          format: int64
        isUnique:
          type: boolean
        displayFormat:
          type: string
    ObjectIdName:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Opportunity:
      title: Opportunity
      required:
        - endDate
        - name
        - startDate
      type: object
      properties:
        id:
          type: string
        sysUserAccountId:
          type: string
        contactId:
          type: string
        eventId:
          type: string
        ngEventId:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/IdNamePair'
        name:
          maxLength: 100
          minLength: 0
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        maxVolunteers:
          type: integer
          format: int32
        mileageEnabled:
          type: boolean
        expensesEnabled:
          type: boolean
        shiftEnabled:
          type: boolean
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        availableOnline:
          type: boolean
        locationName:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        timestamps:
          $ref: '#/components/schemas/Timestamps'
    OpportunitySearchParam:
      title: OpportunitySearchParam
      type: object
      properties:
        pageSize:
          maximum: 200
          minimum: 1
          type: integer
          format: int32
        currentPage:
          minimum: 0
          type: integer
          format: int32
        eventId:
          type: string
        ngEventId:
          type: string
    OpportunitySearchResult:
      title: OpportunitySearchResult
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        opportunityList:
          type: array
          items:
            $ref: '#/components/schemas/Opportunity'
    OpportunityShift:
      title: OpportunityShift
      required:
        - endDate
        - name
        - startDate
      type: object
      properties:
        id:
          type: string
        occurrenceId:
          type: string
        ngOccurrenceId:
          type: string
        name:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        description:
          type: string
        timezoneId:
          type: integer
          format: int32
        maxVolunteer:
          type: integer
          format: int32
        locationName:
          type: string
        syncLocation:
          type: boolean
        address:
          $ref: '#/components/schemas/Address'
        timestamps:
          $ref: '#/components/schemas/Timestamps'
    OpportunityShiftSearchParam:
      title: OpportunityShiftSearchParam
      type: object
      properties:
        pageSize:
          maximum: 200
          minimum: 1
          type: integer
          format: int32
        currentPage:
          minimum: 0
          type: integer
          format: int32
        occurrenceId:
          type: string
        ngOccurrenceId:
          type: string
    OpportunityShiftSearchResult:
      title: OpportunityShiftSearchResult
      type: object
      properties:
        opportunityShiftList:
          type: array
          items:
            $ref: '#/components/schemas/OpportunityShift'
        pagination:
          $ref: '#/components/schemas/Pagination'
    OpportunityVolunteerSearchParam:
      title: OpportunityVolunteerSearchParam
      type: object
      properties:
        pageSize:
          maximum: 200
          minimum: 1
          type: integer
          format: int32
        currentPage:
          minimum: 0
          type: integer
          format: int32
        shiftIds:
          type: array
          items:
            type: string
        groupIds:
          type: array
          items:
            type: string
        roleIds:
          type: array
          items:
            type: string
    OptionsField:
      type: object
      properties:
        isRequired:
          type: boolean
        fieldOptionValues:
          type: array
          items:
            $ref: '#/components/schemas/FieldOptionValue'
    Order:
      title: Order
      required:
        - accountId
        - orderDate
      type: object
      properties:
        donations:
          type: array
          items:
            $ref: '#/components/schemas/DonationItem'
        id:
          type: string
        eventRegistrations:
          type: array
          items:
            $ref: '#/components/schemas/EventRegistrationItem'
        orderDate:
          type: string
          format: date
        accountId:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipItem'
        totalCharge:
          type: number
          format: double
        needShipping:
          type: boolean
        subTotal:
          type: number
          format: double
          readOnly: true
        shipping:
          $ref: '#/components/schemas/OrderShipping'
        tax:
          type: number
          format: double
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/DiscountItem'
        totalDiscount:
          type: number
          format: double
        donorCoveredFeeFlag:
          type: boolean
        shippingHandlingFee:
          type: number
          format: double
        donorCoveredFee:
          type: number
          format: double
        status:
          type: string
          readOnly: true
          enum:
            - Pending
            - Processing
            - Succeeded
            - Failed
            - Error
            - Scheduled
            - Canceled
            - Deferred
            - Refunded
            - Partially_Refunded
            - Dispute_Lost
            - Held_for_Review
        payLater:
          type: boolean
          description: Write only
        timestamps:
          $ref: '#/components/schemas/Timestamps'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    OrderCalculationResult:
      title: OrderCalculationResult
      type: object
      properties:
        totalCharge:
          type: number
          format: double
        subTotal:
          type: number
          format: double
        tax:
          type: number
          format: double
        totalDiscount:
          type: number
          format: double
        shippingHandlingFee:
          type: number
          format: double
        discounts:
          type: array
          items:
            $ref: '#/components/schemas/DiscountItem'
    OrderListResponse:
      title: OrderListResponse
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/AccountOrder'
        pagination:
          $ref: '#/components/schemas/Pagination'
    OrderResponse:
      title: OrderResponse
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
        status:
          type: string
          enum:
            - Pending
            - Processing
            - Succeeded
            - Failed
            - Error
            - Scheduled
            - Canceled
            - Deferred
            - Refunded
            - Partially_Refunded
            - Dispute_Lost
            - Held_for_Review
        paymentResponse:
          $ref: '#/components/schemas/PaymentResponse'
    OrderShipping:
      title: OrderShipping
      required:
        - addressLine1
        - shippingDeliverTo
        - shippingMethodName
        - zipCode
      type: object
      properties:
        shippingMethodName:
          type: string
        shippingDate:
          type: string
          format: date
        shippingCompanyName:
          type: string
        shippingDeliverTo:
          type: string
        city:
          type: string
        stateProvince:
          $ref: '#/components/schemas/CodeNamePair'
        country:
          $ref: '#/components/schemas/IdNamePair'
        county:
          type: string
        zipCode:
          type: string
        zipCodeSuffix:
          type: string
        addressLine1:
          type: string
        addressLine2:
          type: string
        phone:
          type: string
    OrganizationProfile:
      title: OrganizationProfile
      type: object
      properties:
        name:
          type: string
        orgId:
          type: string
        appUrl:
          type: string
    Origin:
      title: Origin
      type: object
      properties:
        originDetail:
          type: string
        originCategory:
          type: string
    OutputFields:
      title: OutputFields
      type: object
      properties:
        standardFields:
          type: array
          items:
            type: string
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
    PageParam:
      type: object
      properties:
        currentPage:
          minimum: 0
          type: integer
          description: 'Default value : 0'
          format: int32
        pageSize:
          maximum: 200
          minimum: 1
          type: integer
          description: 'Default value : 20'
          format: int32
    Pagination:
      title: Pagination
      type: object
      properties:
        currentPage:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        sortColumn:
          type: string
        sortDirection:
          type: string
          enum:
            - DESC
            - ASC
        totalPages:
          type: integer
          format: int64
        totalResults:
          type: integer
          format: int64
    PaginationResponseCustomObjectFieldListResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomObjectFieldListResponse'
        pagination:
          $ref: '#/components/schemas/Pagination'
    PaginationResponseCustomObjectResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomObjectResponse'
        pagination:
          $ref: '#/components/schemas/Pagination'
    PaginationResponseCustomObjectValidatorRuleResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomObjectValidatorRuleResponse'
        pagination:
          $ref: '#/components/schemas/Pagination'
    PaginationEventRegistration:
      title: PaginationEventRegistration
      type: object
      properties:
        accountId:
          type: string
        eventRegistrations:
          type: array
          items:
            $ref: '#/components/schemas/EventRegistration'
        pagination:
          $ref: '#/components/schemas/Pagination'
    PaginationResponseCustomObjectLayoutPageItem:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomObjectLayoutPageItem'
        pagination:
          $ref: '#/components/schemas/Pagination'
    PaginationResponseListRecordResponse:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/ListRecordResponse'
        pagination:
          $ref: '#/components/schemas/Pagination'
    Payment:
      title: Payment
      type: object
      properties:
        id:
          type: string
        amount:
          type: number
          format: double
        paymentStatus:
          type: string
          enum:
            - Pending
            - Processing
            - Succeeded
            - Failed
            - Error
            - Scheduled
            - Canceled
            - Deferred
            - Refunded
            - Partially_Refunded
            - Dispute_Lost
            - Held_for_Review
        note:
          type: string
        tenderType:
          type: integer
          format: int32
        receivedDate:
          type: string
          format: date-time
        creditCardOnline:
          $ref: '#/components/schemas/CreditCardOnlinePayment'
        creditCardOffline:
          $ref: '#/components/schemas/CreditCardOfflinePayment'
        ach:
          $ref: '#/components/schemas/ECheckPayment'
        check:
          $ref: '#/components/schemas/CheckPayment'
        wire:
          $ref: '#/components/schemas/WirePayment'
        inKind:
          $ref: '#/components/schemas/InKindPayment'
        dafpay:
          $ref: '#/components/schemas/DafPayPayment'
    PaymentResponse:
      title: PaymentResponse
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum:
            - Pending
            - Processing
            - Succeeded
            - Failed
            - Error
            - Scheduled
            - Canceled
            - Deferred
            - Refunded
            - Partially_Refunded
            - Dispute_Lost
            - Held_for_Review
        statusMessage:
          type: string
    Percent:
      type: object
      properties:
        defaultValue:
          type: string
        isRequired:
          type: boolean
        length:
          type: integer
          format: int64
        decimalLength:
          type: integer
          format: int64
    Pledge:
      title: Pledge
      type: object
      properties:
        donorName:
          type: string
        id:
          type: string
        matchedDonationId:
          type: string
        accountId:
          type: string
        date:
          type: string
          format: date-time
        amount:
          type: number
          format: double
        anonymousType:
          type: string
          enum:
            - No
            - DonorNameAnonymous
            - DonationAmountAnonymous
        purpose:
          $ref: '#/components/schemas/IdNamePair'
        source:
          $ref: '#/components/schemas/IdNamePair'
        campaign:
          $ref: '#/components/schemas/IdNamePair'
        solicitationMethod:
          $ref: '#/components/schemas/IdNamePair'
        acknowledgee:
          $ref: '#/components/schemas/Acknowledgee'
        fund:
          $ref: '#/components/schemas/IdNamePair'
        timestamps:
          $ref: '#/components/schemas/Timestamps'
        tribute:
          $ref: '#/components/schemas/Tribute'
        donationCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        solicitor:
          $ref: '#/components/schemas/Solicitor'
        fundraiserAccountId:
          type: string
        expectedDate:
          type: string
          format: date-time
        dafpay:
          $ref: '#/components/schemas/PledgeDafPayDistribution'
    PledgeDafPayDistribution:
      type: object
      properties:
        distributionId:
          type: string
        grantId:
          type: string
        totalFees:
          type: number
          format: double
        status:
          type: string
        advisor:
          type: string
        note:
          type: string
      readOnly: true
    PledgePayment:
      title: PledgePayment
      type: object
      properties:
        id:
          type: string
        pledgeId:
          type: string
        date:
          type: string
          format: date-time
        installmentId:
          type: string
        payment:
          $ref: '#/components/schemas/Payment'
        timestamps:
          $ref: '#/components/schemas/Timestamps'
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
        donorCoveredFeeFlag:
          type: boolean
        donorCoveredFee:
          type: number
          format: double
        origin:
          $ref: '#/components/schemas/Origin'
        sendMatchedDonorEmail:
          type: boolean
        sendMatchedDonorLetter:
          type: boolean
        sendAcknowledgeEmail:
          type: boolean
        sendAcknowledgeLetter:
          type: boolean
    PledgePaymentResponse:
      title: PledgePaymentResponse
      type: object
      properties:
        pledgePaymentId:
          type: string
        balance:
          type: number
          format: double
        total:
          type: number
          format: double
        installmentId:
          type: string
        paymentResponse:
          $ref: '#/components/schemas/PaymentResponse'
    ProcessorSettings:
      title: ProcessorSettings
      type: object
      properties:
        neonPaySetting:
          $ref: '#/components/schemas/NeonPaySetting'
    Product:
      title: Product
      type: object
      properties:
        catalogs:
          type: array
          items:
            $ref: '#/components/schemas/Catalog'
        id:
          type: string
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
        code:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        keyword:
          type: string
        description:
          type: string
        unitPrice:
          type: number
          format: double
        downloadURL:
          type: string
        isApplyOnSiteTax:
          type: boolean
        isFrontEndDisplay:
          type: boolean
        shipping:
          $ref: '#/components/schemas/ProductShipping'
        priceOffDiscount:
          type: number
          format: double
        isDiscountInPercentage:
          type: boolean
        hasOptions:
          type: boolean
        priceOffDiscountStartDate:
          type: string
          format: date-time
        priceOffDiscountEndDate:
          type: string
          format: date-time
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
        options:
          type: array
          items:
            $ref: '#/components/schemas/ProductOption'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
    ProductCustomFieldData:
      title: ProductCustomFieldData
      type: object
      properties:
        showOnProductDetail:
          type: boolean
        showOnStorefront:
          type: boolean
        productTypes:
          type: array
          items:
            $ref: '#/components/schemas/ProductTypeId'
    ProductImage:
      title: ProductImage
      type: object
      properties:
        sequenceId:
          type: integer
          format: int32
        url:
          type: string
        label:
          type: string
    ProductItem:
      title: ProductItem
      required:
        - productId
      type: object
      properties:
        productId:
          type: string
        unitPrice:
          type: number
          format: double
        optionSelections:
          type: array
          description: A maximum of three options are allowed
          items:
            $ref: '#/components/schemas/ProductOptionSelection'
        quantity:
          type: integer
          format: int32
        sendAcknowledgeEmail:
          type: boolean
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
    ProductOption:
      title: ProductOption
      type: object
      properties:
        id:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/ProductOptionItem'
        name:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    ProductOptionItem:
      title: ProductOptionItem
      type: object
      properties:
        id:
          type: string
        priceAdjustment:
          type: number
          format: double
        advantageAmountAdjustment:
          type: number
          format: double
        nonDeductibleAmountAdjustment:
          type: number
          format: double
        name:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    ProductOptionSelection:
      title: ProductOptionSelection
      required:
        - itemId
        - optionId
      type: object
      properties:
        optionId:
          type: string
        itemId:
          type: string
    ProductSearchResponse:
      title: ProductSearchResponse
      type: object
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        pagination:
          $ref: '#/components/schemas/Pagination'
    ProductShipping:
      title: ProductShipping
      type: object
      properties:
        shippingRequired:
          type: boolean
        defaultShippingCost:
          type: number
          format: double
        pounds:
          type: integer
          format: int32
        ounces:
          type: number
          format: double
        daysToShip:
          type: integer
          format: int32
    ProductTypeId:
      title: ProductTypeId
      type: object
      properties:
        id:
          type: string
    RecordData:
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        dateFormat:
          type: string
        optionValues:
          type: string
    RecordResponse:
      type: object
      properties:
        recordId:
          type: integer
          format: int64
        recordData:
          type: array
          items:
            $ref: '#/components/schemas/NameValuePair'
    RecordSearchCriteria:
      type: object
      properties:
        criteriaField:
          type: string
        operator:
          type: string
          enum:
            - EQUAL
            - NOT_EQUAL
            - BLANK
            - NOT_BLANK
            - LESS_THAN
            - GREATER_THAN
            - LESS_AND_EQUAL
            - GREATER_AND_EQUAL
            - IN_RANGE
            - NOT_IN_RANGE
            - CONTAIN
            - NOT_CONTAIN
        value:
          type: string
        valueList:
          type: array
          items:
            type: string
    RecordSearchParam:
      type: object
      properties:
        searchCriteriaList:
          type: array
          items:
            $ref: '#/components/schemas/RecordSearchCriteria'
        outputColumnList:
          type: array
          items:
            type: string
        pageParam:
          $ref: '#/components/schemas/CustomObjectPageParam'
    RecurringDonation:
      title: RecurringDonation
      type: object
      properties:
        id:
          type: string
        recurringPeriod:
          type: integer
          format: int32
        accountId:
          type: string
        recurringPeriodType:
          type: string
          enum:
            - YEAR
            - MONTH
            - DAY
            - LIFE
            - WEEK
        amount:
          type: number
          format: double
        nextDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        purpose:
          $ref: '#/components/schemas/IdNamePair'
        campaign:
          $ref: '#/components/schemas/IdNamePair'
        creditCardOnline:
          $ref: '#/components/schemas/CreditCardOnlinePayment'
        ach:
          $ref: '#/components/schemas/ECheckPayment'
        fund:
          $ref: '#/components/schemas/IdNamePair'
        donorCoveredFeeFlag:
          type: boolean
        timestamps:
          $ref: '#/components/schemas/Timestamps'
        fundraiserAccountId:
          type: string
    RecurringDonationsResponse:
      title: RecurringDonationsResponse
      type: object
      properties:
        recurringDonations:
          type: array
          items:
            $ref: '#/components/schemas/DynaRecurringDonation'
        pagination:
          $ref: '#/components/schemas/Pagination'
    RelationFilter:
      type: object
      properties:
        active:
          type: boolean
        errorMessage:
          type: string
        lookupWindowText:
          type: string
        filterCriteria:
          type: array
          items:
            $ref: '#/components/schemas/FilterCriteria'
    ResponseEntity:
      title: ResponseEntity
      type: object
    RoleVolunteerSearchParam:
      title: RoleVolunteerSearchParam
      type: object
      properties:
        pageSize:
          maximum: 200
          minimum: 1
          type: integer
          format: int32
        currentPage:
          minimum: 0
          type: integer
          format: int32
        opportunityIds:
          type: array
          items:
            type: string
        shiftIds:
          type: array
          items:
            type: string
        groupIds:
          type: array
          items:
            type: string
    SearchCriteria:
      title: SearchCriteria
      type: object
      properties:
        field:
          type: string
        operator:
          type: string
          enum:
            - EQUAL
            - NOT_EQUAL
            - BLANK
            - NOT_BLANK
            - LESS_THAN
            - GREATER_THAN
            - LESS_AND_EQUAL
            - GREATER_AND_EQUAL
            - IN_RANGE
            - NOT_IN_RANGE
            - CONTAIN
            - NOT_CONTAIN
        value:
          type: string
        valueList:
          type: array
          items:
            type: object
            properties: {}
    SearchCustomField:
      title: SearchCustomField
      type: object
      properties:
        displayName:
          type: string
        operators:
          type: array
          items:
            type: string
            enum:
              - EQUAL
              - NOT_EQUAL
              - BLANK
              - NOT_BLANK
              - LESS_THAN
              - GREATER_THAN
              - LESS_AND_EQUAL
              - GREATER_AND_EQUAL
              - IN_RANGE
              - NOT_IN_RANGE
              - CONTAIN
              - NOT_CONTAIN
        id:
          type: integer
          format: int32
    SearchFields:
      title: SearchFields
      type: object
      properties:
        standardFields:
          type: array
          items:
            $ref: '#/components/schemas/StandardField'
        customFields:
          type: array
          items:
            $ref: '#/components/schemas/SearchCustomField'
    SearchRequest:
      title: SearchRequest
      type: object
      properties:
        searchFields:
          type: array
          items:
            $ref: '#/components/schemas/SearchCriteria'
        outputFields:
          type: array
          items:
            type: object
            properties: {}
        pagination:
          $ref: '#/components/schemas/Pagination'
    SearchResponse:
      title: SearchResponse
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        searchResults:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
    ShiftAndVolunteer:
      title: ShiftAndVolunteer
      type: object
      properties:
        accountId:
          type: string
        shiftIds:
          type: array
          items:
            type: string
    ShiftVolunteerSearchParam:
      title: ShiftVolunteerSearchParam
      type: object
      properties:
        pageSize:
          maximum: 200
          minimum: 1
          type: integer
          format: int32
        currentPage:
          minimum: 0
          type: integer
          format: int32
        groupIds:
          type: array
          items:
            type: string
        roleIds:
          type: array
          items:
            type: string
    ShippingAddress:
      title: ShippingAddress
      type: object
      properties:
        addressId:
          type: string
        shippingCompanyName:
          type: string
        shippingDeliverTo:
          type: string
        type:
          $ref: '#/components/schemas/IdNamePair'
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        addressLine4:
          type: string
        city:
          type: string
        stateProvince:
          $ref: '#/components/schemas/CodeNamePair'
        country:
          $ref: '#/components/schemas/IdNamePair'
        territory:
          type: string
        county:
          type: string
        zipCode:
          type: string
        zipCodeSuffix:
          type: string
        phone1:
          type: string
        phone1Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        phone2:
          type: string
        phone2Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        phone3:
          type: string
        phone3Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        fax:
          type: string
        faxType:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
    ShippingAddressAdd:
      title: ShippingAddressAdd
      type: object
      properties:
        accountId:
          type: string
        addressId:
          type: string
        shippingCompanyName:
          type: string
        shippingDeliverTo:
          type: string
        type:
          $ref: '#/components/schemas/IdNamePair'
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressLine3:
          type: string
        addressLine4:
          type: string
        city:
          type: string
        stateProvince:
          $ref: '#/components/schemas/CodeNamePair'
        country:
          $ref: '#/components/schemas/IdNamePair'
        territory:
          type: string
        county:
          type: string
        zipCode:
          type: string
        zipCodeSuffix:
          type: string
        phone1:
          type: string
        phone1Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        phone2:
          type: string
        phone2Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        phone3:
          type: string
        phone3Type:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
        fax:
          type: string
        faxType:
          type: string
          enum:
            - Home
            - Work
            - Mobile
            - Other
    ShippingMethodRequest:
      title: ShippingMethodRequest
      required:
        - countryId
        - zipCode
      type: object
      properties:
        countryId:
          type: string
        zipCode:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/ProductItem'
    ShippingMethodResponse:
      title: ShippingMethodResponse
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        fee:
          type: number
          format: double
    SocialFundraising:
      title: SocialFundraising
      type: object
      properties:
        enabled:
          type: boolean
          description: "false"
          example: false
        fundraisersCount:
          type: integer
          format: int32
        createFundraiserUrl:
          type: string
        fundraiserListUrl:
          type: string
        fundraisingPageContent:
          type: string
        statistics:
          $ref: '#/components/schemas/CampaignStats'
    SoftCredit:
      title: SoftCredit
      type: object
      properties:
        id:
          type: string
        recipientAccountId:
          type: string
        amount:
          type: number
          format: double
        donationId:
          type: string
        eventRegistrationId:
          type: string
        membershipId:
          type: string
    SoftCreditSearchResult:
      title: SoftCreditSearchResult
      type: object
      properties:
        softCredits:
          type: array
          items:
            $ref: '#/components/schemas/SoftCredit'
        pagination:
          $ref: '#/components/schemas/Pagination'
    Solicitor:
      title: Solicitor
      type: object
      properties:
        accountId:
          type: string
        solicitorName:
          type: string
          readOnly: true
    StandardField:
      title: StandardField
      type: object
      properties:
        fieldName:
          type: string
        operators:
          type: array
          items:
            type: string
            enum:
              - EQUAL
              - NOT_EQUAL
              - BLANK
              - NOT_BLANK
              - LESS_THAN
              - GREATER_THAN
              - LESS_AND_EQUAL
              - GREATER_AND_EQUAL
              - IN_RANGE
              - NOT_IN_RANGE
              - CONTAIN
              - NOT_CONTAIN
    SubMembership:
      title: SubMembership
      type: object
      properties:
        id:
          type: string
        parentId:
          type: string
        accountId:
          type: string
        membershipLevel:
          $ref: '#/components/schemas/IdNamePair'
        membershipTerm:
          $ref: '#/components/schemas/IdNamePair'
        autoRenewal:
          type: boolean
        source:
          $ref: '#/components/schemas/IdNamePair'
        changeType:
          type: string
          readOnly: true
          enum:
            - UNCHANGED
            - UPGRADED
            - DOWNGRADED
        termUnit:
          type: string
          enum:
            - YEAR
            - MONTH
            - DAY
            - LIFE
            - WEEKLY
        termDuration:
          type: integer
          format: int32
        enrollType:
          type: string
          enum:
            - JOIN
            - RENEW
            - REJOIN
        transactionDate:
          type: string
          format: date-time
        termStartDate:
          type: string
          format: date-time
        termEndDate:
          type: string
          format: date-time
        fee:
          type: number
          format: double
        couponCode:
          type: string
        sendAcknowledgeEmail:
          type: boolean
        status:
          type: string
          enum:
            - SUCCEEDED
            - FAILED
            - PENDING
            - CANCELED
            - WAITINGLIST
            - CANCEL_PENDING
            - DEFERRED
            - REFUNDED
        complimentary:
          type: integer
          description: '1: Complimentary memberships because of donations made.<br>2:
            Complimentary memberships through the combination of past membership fees.<br>3:
            Complimentary memberships through the combination of donations made and
            previous membership fees.'
          format: int32
        membershipCustomFields:
          type: array
          items:
            $ref: '#/components/schemas/CustomField'
        craInfo:
          $ref: '#/components/schemas/CraInfo'
        taxDeductibleInfo:
          $ref: '#/components/schemas/TaxDeducibleInfo'
        timestamps:
          $ref: '#/components/schemas/Timestamps'
        origin:
          $ref: '#/components/schemas/Origin'
        sendAutoRenewalEnabledEmail:
          type: boolean
        isCurrentEmployee:
          type: boolean
    SubMembershipResponse:
      title: SubMembershipResponse
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
        membershipLevel:
          $ref: '#/components/schemas/IdNamePair'
        membershipTerm:
          $ref: '#/components/schemas/IdNamePair'
        status:
          type: string
          enum:
            - SUCCEEDED
            - FAILED
            - PENDING
            - CANCELED
            - WAITINGLIST
            - CANCEL_PENDING
            - DEFERRED
            - REFUNDED
    SystemUser:
      title: SystemUser
      type: object
      properties:
        id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
    TaxDeductiblePortion:
      title: TaxDeductiblePortion
      type: object
      properties:
        fund:
          $ref: '#/components/schemas/IdNamePair'
        purpose:
          $ref: '#/components/schemas/IdNamePair'
    TaxDeducibleInfo:
      type: object
      properties:
        nonDeductibleAmount:
          minimum: 0
          exclusiveMinimum: false
          type: number
          format: double
        taxDeducibleAmount:
          type: number
          format: double
          readOnly: true
        nonDeductibleDescription:
          type: string
    Text:
      type: object
      properties:
        defaultValue:
          type: string
        isRequired:
          type: boolean
        isUnique:
          type: boolean
        length:
          type: integer
          format: int64
    Textarea:
      type: object
      properties:
        defaultValue:
          type: string
        isRequired:
          type: boolean
        length:
          type: integer
          format: int64
    Ticket:
      title: Ticket
      type: object
      properties:
        ticketId:
          type: integer
          format: int32
        ticketSequence:
          type: integer
          format: int32
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/EventAttendee'
    TicketsPerRegistration:
      title: TicketsPerRegistration
      type: object
      properties:
        number:
          type: integer
          format: int32
        operator:
          type: string
          enum:
            - Up_to
            - Exactly
    TimeSheetApi:
      title: TimeSheetApi
      required:
        - accountId
        - status
        - weekOf
      type: object
      properties:
        id:
          type: string
        accountId:
          type: string
        projectId:
          type: string
        weekOf:
          type: string
          format: date
        timeSheetItems:
          type: array
          items:
            $ref: '#/components/schemas/TimeSheetItemApi'
        status:
          type: string
          enum:
            - StillWorking
            - Pending
            - Approved
        totalHours:
          type: number
          format: double
        totalExpenses:
          type: number
          format: double
        totalMileages:
          type: number
          format: double
        approvalDatetime:
          type: string
          format: date-time
        approvalBy:
          type: string
        timestamps:
          $ref: '#/components/schemas/Timestamps'
    TimeSheetItemApi:
      title: TimeSheetItemApi
      type: object
      properties:
        id:
          type: string
        timeSheetId:
          type: string
        shiftId:
          type: string
        roleId:
          type: string
        date:
          type: string
          format: date
        hours:
          type: number
          format: double
        expenses:
          type: number
          format: double
        mileages:
          type: number
          format: double
        timestamps:
          $ref: '#/components/schemas/Timestamps'
    TimeSheetSearchParam:
      title: TimeSheetSearchParam
      type: object
      properties:
        pageSize:
          maximum: 200
          minimum: 1
          type: integer
          format: int32
        currentPage:
          minimum: 0
          type: integer
          format: int32
        ids:
          type: string
        accountIds:
          type: string
        projectIds:
          type: string
        volunteerGroups:
          type: string
        roleIds:
          type: string
        shiftIds:
          type: string
        statusList:
          type: array
          items:
            type: string
            enum:
              - StillWorking
              - Pending
              - Approved
    TimeSheetSearchResult:
      title: TimeSheetSearchResult
      type: object
      properties:
        timeSheetApiList:
          type: array
          items:
            $ref: '#/components/schemas/TimeSheetApi'
        pagination:
          $ref: '#/components/schemas/Pagination'
    Timestamps:
      title: Timestamps
      type: object
      properties:
        createdBy:
          type: string
        createdDateTime:
          type: string
          format: date-time
        lastModifiedBy:
          type: string
        lastModifiedDateTime:
          type: string
          format: date-time
    Tribute:
      title: Tribute
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - Honor
            - Memory
    UpdateCustomObject:
      type: object
      properties:
        objectLabel:
          type: string
        objectDescription:
          type: string
        allowActivity:
          type: boolean
        allowReport:
          type: boolean
        addToNavigation:
          type: boolean
        createWebhook:
          type: string
        updateWebhook:
          type: string
        deleteWebhook:
          type: string
        isActive:
          type: boolean
    UserGroupApi:
      title: UserGroupApi
      required:
        - name
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        totalVolunteers:
          type: integer
          format: int32
        hours:
          type: number
          format: double
        expenses:
          type: number
          format: double
        mileages:
          type: number
          format: double
    UserGroupSearchParam:
      title: UserGroupSearchParam
      type: object
      properties:
        pageSize:
          minimum: 1
          type: integer
          format: int32
        currentPage:
          minimum: 0
          type: integer
          format: int32
        groupIds:
          type: string
        groupName:
          type: string
    UserGroupSearchResult:
      title: UserGroupSearchResult
      type: object
      properties:
        groupList:
          type: array
          items:
            $ref: '#/components/schemas/UserGroupApi'
        pagination:
          $ref: '#/components/schemas/Pagination'
    VolunteerAccountIds:
      title: VolunteerAccountIds
      required:
        - accountIds
      type: object
      properties:
        accountIds:
          type: array
          items:
            type: string
    VolunteerApi:
      type: object
      properties:
        accountId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        phone:
          type: string
        smsNumber:
          type: string
        opportunityIds:
          type: array
          items:
            type: string
        shiftIds:
          type: array
          items:
            type: string
        roles:
          type: array
          items:
            type: string
        groupIds:
          type: array
          items:
            type: string
        totalHours:
          type: number
          format: double
        totalExpenses:
          type: number
          format: double
        totalMileages:
          type: number
          format: double
    VolunteerRoleApi:
      title: VolunteerRoleApi
      required:
        - name
        - status
        - statusColor
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        statusColor:
          type: string
          enum:
            - Placeholder
            - Grey
            - Red
            - Orange
            - Yellow
            - Green
            - Blue
            - Purple
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        timestamps:
          $ref: '#/components/schemas/Timestamps'
    VolunteerRoleSearchParam:
      title: VolunteerRoleSearchParam
      type: object
      properties:
        pageSize:
          minimum: 1
          type: integer
          format: int32
        currentPage:
          minimum: 0
          type: integer
          format: int32
    VolunteerRoleSearchResult:
      title: VolunteerRoleSearchResult
      type: object
      properties:
        volunteerRoleApis:
          type: array
          items:
            $ref: '#/components/schemas/VolunteerRoleApi'
        pagination:
          $ref: '#/components/schemas/Pagination'
    VolunteerSearchParam:
      title: VolunteerSearchParam
      type: object
      properties:
        pageSize:
          maximum: 200
          minimum: 1
          type: integer
          format: int32
        currentPage:
          minimum: 0
          type: integer
          format: int32
        opportunityIds:
          type: array
          items:
            type: string
        shiftIds:
          type: array
          items:
            type: string
        groupIds:
          type: array
          items:
            type: string
        roleIds:
          type: array
          items:
            type: string
    VolunteerSearchResult:
      title: VolunteerSearchResult
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        volunteerList:
          type: array
          items:
            $ref: '#/components/schemas/VolunteerApi'
    Webhook:
      title: Webhook
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
        trigger:
          type: string
          enum:
            - CREATE_ACCOUNT
            - UPDATE_ACCOUNT
            - DELETE_ACCOUNT
            - CREATE_DONATION
            - UPDATE_DONATION
            - DELETE_DONATION
            - CREATE_MEMBERSHIP
            - UPDATE_MEMBERSHIP
            - DELETE_MEMBERSHIP
            - CREATE_ACTIVITY
            - UPDATE_ACTIVITY
            - DELETE_ACTIVITY
            - CREATE_EVENT_REGISTRATION
            - UPDATE_EVENT_REGISTRATION
            - DELETE_EVENT_REGISTRATION
            - CREATE_ORDER
            - UPDATE_ORDER
            - DELETE_ORDER
            - CREATE_MERGED_ACCOUNT
        contentType:
          type: string
        triggerSelfImport:
          type: boolean
        httpBasic:
          $ref: '#/components/schemas/HttpBasic'
        customParameters:
          type: array
          items:
            $ref: '#/components/schemas/NameValuePair'
    WirePayment:
      title: WirePayment
      type: object
      properties:
        wireNumber:
          type: string
        institution:
          type: string
        routingNumber:
          type: string
        accountNumber:
          type: string
        accountOwner:
          type: string
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://www.api.neoncrm.com/nx/oauth/authorize
          tokenUrl: https://www.api.neoncrm.com/nx/oauth/token
          scopes:
            1: Read Account
            2: Write Account
            3: Read Donation
            4: Write Donation
            5: Read Event
            6: Write Event
            7: Read Event Registration
            8: Write Event Registration
            9: Read Webhook
            10: Write Webhook
            11: Reads properties info
    X-API-KEY:
      type: http
      scheme: basic
